-- MySQL dump 10.13  Distrib 5.7.12, for Linux (x86_64)
--
-- Host: localhost    Database: shady_blog
-- ------------------------------------------------------
-- Server version	5.7.12

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `shady_blog`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `shady_blog` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `shady_blog`;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `group_id` (`group_id`,`permission_id`),
  KEY `auth_group__permission_id_4f5f0d73023f5ef5_fk_auth_permission_id` (`permission_id`),
  CONSTRAINT `auth_group__permission_id_4f5f0d73023f5ef5_fk_auth_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_530c016fab29b23_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `content_type_id` (`content_type_id`,`codename`),
  CONSTRAINT `auth__content_type_id_16ace37aa2a8d7a7_fk_django_content_type_id` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=28 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can add permission',2,'add_permission'),(5,'Can change permission',2,'change_permission'),(6,'Can delete permission',2,'delete_permission'),(7,'Can add group',3,'add_group'),(8,'Can change group',3,'change_group'),(9,'Can delete group',3,'delete_group'),(10,'Can add user',4,'add_user'),(11,'Can change user',4,'change_user'),(12,'Can delete user',4,'delete_user'),(13,'Can add content type',5,'add_contenttype'),(14,'Can change content type',5,'change_contenttype'),(15,'Can delete content type',5,'delete_contenttype'),(16,'Can add session',6,'add_session'),(17,'Can change session',6,'change_session'),(18,'Can delete session',6,'delete_session'),(19,'Can add tag',7,'add_tag'),(20,'Can change tag',7,'change_tag'),(21,'Can delete tag',7,'delete_tag'),(22,'Can add post',8,'add_post'),(23,'Can change post',8,'change_post'),(24,'Can delete post',8,'delete_post'),(25,'Can add category',9,'add_category'),(26,'Can change category',9,'change_category'),(27,'Can delete category',9,'delete_category');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(30) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(30) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$20000$wuxgOeeeoty6$eh7xW4tfKrK92+a6HHJDrz5j45nJrWwKaLPjmQqtUI8=','2016-06-13 05:04:58',1,'shady','','','knightdawner@gmail.com',1,1,'2016-03-03 10:33:11'),(2,'pbkdf2_sha256$20000$qRUUWxjD6eZh$/BVBhqMADOdp+PLQfYt3JSmrd3FUOT+T5wwU67RGPuc=',NULL,0,'difference','','','difference@gmail.com',0,1,'2016-05-08 11:40:40');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_3568f7197927866a_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_3568f7197927866a_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6bf6d76c2f0a8647_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`,`permission_id`),
  KEY `auth_user_u_permission_id_3f5c5ecfe9a3f5b1_fk_auth_permission_id` (`permission_id`),
  CONSTRAINT `auth_user_u_permission_id_3f5c5ecfe9a3f5b1_fk_auth_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissi_user_id_6b6d73363fa70eaa_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_category`
--

DROP TABLE IF EXISTS `blog_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_category` (
  `category_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `related_post` int(10) unsigned NOT NULL,
  `create_date` datetime NOT NULL,
  `slug` varchar(50) NOT NULL,
  PRIMARY KEY (`category_id`),
  UNIQUE KEY `name` (`name`),
  UNIQUE KEY `slug` (`slug`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_category`
--

LOCK TABLES `blog_category` WRITE;
/*!40000 ALTER TABLE `blog_category` DISABLE KEYS */;
INSERT INTO `blog_category` VALUES (1,'Linux',6,'2016-03-03 10:39:52','linux'),(2,'Python',2,'2016-03-03 10:39:52','python'),(3,'Java',0,'2016-03-03 10:39:52','java'),(4,'LifeHacking',3,'2016-03-03 10:39:52','lifehacking'),(5,'ShellScript',0,'2016-03-03 10:39:52','shellscript'),(6,'Database',3,'2016-03-03 10:39:52','database'),(7,'Algorithm',0,'2016-03-03 10:39:52','algorithm'),(8,'ComputerNetwork',2,'2016-03-03 10:39:52','computernetwork'),(9,'Operating System',0,'2016-03-03 10:39:52','operating-system'),(10,'SoftwareEngineer',0,'2016-03-03 10:39:52','softwareengineer'),(11,'DataScience',0,'2016-03-03 10:39:52','datascience'),(12,'WebDevelopement',5,'2016-03-03 11:19:33','webdevelopement');
/*!40000 ALTER TABLE `blog_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_post`
--

DROP TABLE IF EXISTS `blog_post`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_post` (
  `post_id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `content` longtext NOT NULL,
  `abstract` varchar(300) NOT NULL,
  `publish_date` datetime NOT NULL,
  `author` varchar(20) NOT NULL,
  `status` varchar(2) NOT NULL,
  `views` int(10) unsigned NOT NULL,
  `likes` int(10) unsigned NOT NULL,
  `slug` varchar(50) NOT NULL,
  `category_id` int(11) NOT NULL,
  `image_link` varchar(200) NOT NULL,
  PRIMARY KEY (`post_id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `blog_p_category_id_103aa770da7e3cdc_fk_blog_category_category_id` (`category_id`),
  CONSTRAINT `blog_p_category_id_103aa770da7e3cdc_fk_blog_category_category_id` FOREIGN KEY (`category_id`) REFERENCES `blog_category` (`category_id`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_post`
--

LOCK TABLES `blog_post` WRITE;
/*!40000 ALTER TABLE `blog_post` DISABLE KEYS */;
INSERT INTO `blog_post` VALUES (1,'Server的配置','Server的配置\r\n=====\r\n Server: A server is both a running instance of some software that is capable of accepting requests from clients, and the computer that executes such software。Server 翻译为服务器事实是不怎么合适的，server指的是能够接受请求并提供服务的介质。本文讲一下如何如何申请阿里云服务器ECS，如何进行初步管理， 以及如何进行Django开发环境为主.\r\n\r\n#####申请主机主要流程(具体看[官方网站](http://www.aliyun.com/))\r\n1. 注册阿里云帐号     \r\n2. 完成实名认证(使用支付宝实名认证即可)    \r\n3. 申请免费15天使用的云服务器(我使用的是Ubuntu server14.04)    \r\n   学生的话可以享受9.9/month购机,       \r\n4. 找到云服务器(实例)管理面板(默认登录名是root),修改登录密码,过程需要手机验证码验证       \r\n  如果你想要海外服务器,可以做科学上网用,建议使用 [DigitalOcean](https://www.digitalocean.com/?refcode=3e72e756d8bc),激活后就会收到$10的奖励. 可以购买$5/month的服务， 其配置是:512M/1cpu 20GB SSD磁盘 1T 流量/month    \r\n\r\n----\r\n#####配置ssh登录\r\n1. 使用ssh(Secure Shell)登录\r\n  SSH是一种网络协议，用于计算机之间的加密登录 下面使用Linux shell 登录， windows可以使用putty， 或者powershell, xshell登录, 建议使用 [xshell 5](https://www.netsarang.com/products/xsh_overview.html)， 个人觉得很好用,有免费的个人版本， 完全满足使用.   \r\n\r\n```python\r\n	$ ssh username@125.34.23.252    \r\n	输入密码即可登录远程服务器    \r\n	指定端口登录 -p   \r\n	$ ssh -p 2322 username@ip_address   \r\n```\r\n2. 添加ssh公钥认登录   \r\n每次填写密码太麻烦， 可以配置ssh公钥认证.原理是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录，不再要求密码。        \r\n \r\n * 本地生成一对密匙， 一个密钥(idrsa)一个公钥(idrsa.pub)\r\n\r\n	```python\r\n	$ ssh-keygen\r\n	```\r\n	期间可以设置一个密码， 保护密钥的安全， 如果别人得到你电脑使用ssh登录会要求输入这个密码， 缺点是你每次登录也需要输入密码. 可以设置为空.   \r\n * 将生成的公钥推送到目的远程服务器上\r\n\r\n	```python\r\n	$ ssh-copy-id user@host\r\n	```\r\n * 成功后使用下面命令尝试登录 \r\n\r\n	```python\r\n	$ ssh username@host\r\n	```\r\n * 为了让服务器更加安全， 可以禁止远程服务器密码验证登录\r\n\r\n	```python\r\n	$vi /etc/ssh/sshd_config\r\n	找到下面一行， 把yes改为no.\r\n	PasswordAuthentication yes\r\n	同时找到PermitRootLogin yes 修改为no 会禁止Root账号远程登录\r\n	当然前提是你系统中有另外一个非Root用户,下面会讲如何添加\r\n	```\r\n	修改为no，这样在其他shell使用密码登录会出现下面提醒:\r\n\r\n	```python\r\n	Warning: Permanently added \'120.23.71.102\' (ECDSA) to the list of known hosts. \r\n	Permission denied (publickey).\r\n	```\r\n\r\n----\r\n##### 为系统添加新用户\r\n  阿里云服务器默认的用户只用root,在服务器管理上使用root帐号比较有风险(With Great Power Comes Great Responsibility),可以添加另外一个帐号,并将其添加到sudoers中,当需要使用超级管理权限时,使用sudo命令前缀执行. 平时不使用管理员权限， 这样能避免严重错误操作. 下面列出具体做法,以Ubuntu Server为例.\r\n\r\n1. 创建新用户(默认使用root帐号)\r\n	1.  为系统添加一个新用户(这里以username为例)\r\n\r\n	```python\r\n	# useradd -m  -d /home/username username\r\n	-m 的意思是为新用户创建一个Home direcotry, 默认为用户名,例如 /home/username\r\n	```\r\n	2. 为新用户设置密码\r\n\r\n	```python\r\n	# passwd username\r\n	输入两次密码， 随便提一下， 使用passwd username 可以为其他用户修改密码(root权限)\r\n	当自己使用passwd 时， 可以修改当前账号的密码\r\n	```\r\n	3. 指定用户使用的shell \r\n\r\n	```python\r\n	# usermod -s /bin/bash username   \r\n	指定新用户使用的shell， 这里为bash\r\n	跳过这一步shell的自动补全功能不能使用.\r\n	usermod 指令可以修改一切用户信息,具体google\r\n	```\r\n	4. 查看是否创建成功\r\n\r\n	```python\r\n	# cat /etc/passwd | grep \'username\'\r\n	如果能看到该用户的相关信息,则创建成功.\r\n	```\r\n	5. 切换用户   \r\n\r\n	```python\r\n	# su username\r\n	输入密码后， 使用 $whoami查看当前登录用户    \r\n	```\r\n\r\n2. 将用户添加到管理员权限中       \r\n	1. 找到/etc/sudoers   \r\n	使用编辑器Vi 打开， 进行编辑   \r\n	找到 root ALL=(ALL:ALL) ALL   \r\n	2.  添加下面语句    \r\n	username ALL=(ALL:ALL) ALL       \r\n	3. 保存退出， 使用vim的话是使用:wq      \r\n	4. 切换用户登录，尝试打开/etc/sudoers 文件, 记得添加sudo 前缀  \r\n\r\n####搭建Django Web开发环境   \r\n1. 使用下面的命令进行虚拟环境的搭建:\r\n*  [virtualenvwrapper](http://virtualenvwrapper.readthedocs.org/en/latest/install.html)\r\n*  [virtualenv](http://virtualenv.readthedocs.org/en/latest/installation.html)\r\n\r\n	```python\r\n	$sudo apt-get install python-pip\r\n	$sudo pip install virtualenv\r\n	$sudo pip install virtualenvwrapper\r\n	```\r\n	示例使用： \r\n		$ mkvirtualenv newVirtualDirectorty     #开启一个新的虚拟环境   \r\n		$ workon newVirtualDirectorty   #和virtualenv的source  /bin/activate一样    \r\n		$deactivate 	#离开虚拟环境时使用   \r\n		$ workon anotherDirectory #到另外的虚拟环境   \r\n	再~/.bashrc 或者 ~/.profile 添加下面语句：\r\n\r\n	```python\r\n	export WORKON_HOME=$HOME/.virtualenvs\r\n	export PROJECT_HOME=$HOME/Devel\r\n	export VIRTUALENVWRAPPER_SCRIPT=/usr/local/bin/virtualenvwrapper.sh\r\n	source /usr/local/bin/virtualenvwrapper_lazy.sh\r\n	然后使用 $source ~/.bashrc 重新加载配置， 如果出现:\r\n	-bash: /usr/share/virtualenvwrapper/virtualenvwrapper_lazy.sh: No such file or directory\r\n	使用下面语句:  \r\n	cd /usr/share \r\n	sudo mkdir virtualenvwrapper\r\n	cp /usr/local/bin/virtualenvwrapper_lazy.sh  /usr/share/virtualenvwrapper\r\n	```\r\n2.   创建虚拟环境并搭建Django开发环境\r\n$mkvirtualenv myBlog   \r\n$ workon myBlog   \r\n$ cd ~/.virtualenv/myBlog   \r\n$ pip install Django==1.8  	#指定Django的版本1.8， 最新是1.9  1.8版本是LTS(Long Term Support)   \r\n过程如果出现断网(坑爹， 我刚好是)， 出现下面的情况：Hash of the package doesn\'t match the expected hash Bad md5 hash for package \r\n![ErrorMessage](http://7xo4sa.com1.z0.glb.clouddn.com/djangoError.png)  \r\n可以选择使用下面的指令： pip install django==1.8  --no-cache-dir       \r\n或者找到官网安装包： pip install https://www.djangoproject.com/download/1.8.7/tarball/   \r\n3.  创建Django项目   \r\n$ django-admin startproject blog      \r\n$ python manage.py startapp mySite   \r\n$ python manage   \r\n$ python manage.py migrate   \r\n$ python manage.py runserver     \r\n打开浏览器http:127.0.0.1:8000可以看见Django的欢迎页....\r\n',' Server: A server is both a running instance of some software that is capable of accepting requests from clients, and the computer that executes such software。','2016-03-03 10:54:37','Shady','PL',2,0,'serverde-pei-zhi',1,'http://web-hosting-dedicated-server.com/wp-content/uploads/2015/10/Server-Room-1.jpg'),(2,'这是一个Markdown测试  ','测试markdown的写作环境    \r\n\r\n> 勿忘初心， 方得始终     \r\n> All of the buildings, all of those cars were once just a dream in somebody\'s head.   \r\n\r\n下面将粘贴一些代码, 测试代码高亮效果。   \r\n\r\n```python\r\nfrom django.db import models\r\nfrom django.utils import timezone\r\nfrom django.contrib.auth.models import User\r\n\r\n# Create your models here.\r\nclass UserProfile(models.Model):\r\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\r\n    FEMALE = \'F\'\r\n    MALE = \'M\'\r\n    SEX_CHOICE = ((FEMALE, \'female\'),(MALE, \'male\'))\r\n    sex = models.CharField(max_length=1, choices=SEX_CHOICE,blank=True)\r\n\r\n    website = models.URLField(blank=True)\r\n    last_login = models.DateTimeField(auto_now=True)\r\n# An integer stands for the level of the user(potnetial buyer)\r\n    user_level = models.PositiveIntegerField(default=0)\r\n# Email validation (proved or not)\r\n    status = models.PositiveIntegerField(default=0)\r\n\r\n    def __str__(self):\r\n        return self.user.username\r\n```\r\n\r\n下面是今晚的任务：  \r\n\r\n  * 继续完善博客功能    \r\n  * 更多的测试   \r\n  * 查看如何进行部署    \r\n\r\n然后下面测试链接 ：   \r\n\r\n图片测试：      \r\n![example image](http://7xo4sa.com1.z0.glb.clouddn.com/dun.jpg \"An exemplary image\")   \r\n','测试markdown的写作环境    ','2016-03-03 11:16:12','shady','PL',3,1,'zhe-shi-yi-ge-markdownce-shi',4,'http://ppesydney.net/wp-content/uploads/2015/05/blogging-image.jpg'),(3,'HTML 基础','#### 基本标签\r\n1. 在HTML里面， 标签可表明标签里面内容的信息， 比如&lt;p>&lt;/p>这是一段文字。使用标签属性， 可以更全面地描述标签所表示的内容. 标签也通常被称为元素(Element), 并且标签通常是成对出现， 分为“开标签”(opening tag)和“闭标签”(closing tag)。\r\n\r\n ```css    \r\n <p lang=\"en-us\"> Paragraph in English </p>    \r\n ```    \r\n在这里p是标签的名字，lang是标签的属性名，en-us是标签的属性描述。    \r\n2. 在&lt;head> 标签里面的&lt;title>标签， 具有如下的作用：   \r\n    * 显示在浏览器窗口的顶部， 或者新的标签(tab)的顶部\r\n    * 当页面被收藏时， 显示的书签名字\r\n    * 搜索引擎显示网页的搜索链接\r\n通常的命方式是你的 网站名 - 网页的标题，长度最好是不超过(64 characters)\r\n例如：\r\n\r\n```css\r\n<title>Metro - The Boston Globe</title>\r\n<title>Flickr: Groups</title>\r\n```\r\n##### 结构标签Structural markup： (用于表示页面的结构)    \r\n\r\n```css\r\n<h1></h1> ~ <h6></h6> 主要用于标题和分标题   \r\n<p></p> 段落   \r\n<b></b> 字体加粗   \r\n<i></i> 字体斜体   \r\n<sup></sup>  用于表示上标(superscript)    \r\n<sub></sub> 用于表示下标(subscript)   \r\n<br /> 用于表示段内换行， 用于段落中   \r\n<hr /> 用于表示段间空白行   \r\n```  \r\n\r\n##### 语义标签Semantic Markup：\r\n  不应该依靠下面的标签修改样式， 其主要目的是更加准确地描述页面的内容， 给搜索引擎或者语音阅读用的， 比如强调语气加强  \r\n\r\n```css\r\n<em></em>  表示强调， 默认斜体   \r\n<blockquote></blockquote> 表示引用， 默认缩进\r\n<strong></strong> 表示强调重要性， 默认加粗\r\n<abbr></abbr> 表示缩写, example: <p><abbr title=\"Professor\">Prof</abbr>\r\n<cite></cite> 表示引用著作的名字\r\n<address></address> 表示地址， 默认斜体\r\n<ins></ins> 表示文字被插入(insert)  默认有下划线\r\n<del></del> 表示文字被删除(delete) 默认有删除线\r\n<s></s> 表示元素不再有效， 不准确，默认被横线划掉\r\n```\r\n\r\n####列表(List)   \r\n列表是可以相互嵌套的。   \r\n\r\n```css\r\n有序列表(Order List)   \r\n<ol>  \r\n<li>Chop potatoes into quarters</li>   \r\n<li>Mix in the milk mixture</li>   \r\n</ol>   \r\n无序列表(Unorder List)   \r\n<ul>   \r\n	<li>Apple</li>   \r\n	<li>Strawbarry</li>   \r\n</ul>   \r\n定义列表   \r\n<dl>  \r\n	<dt>定义的项目名</dt>   \r\n	<dd>项目的定义</dd>   \r\n<dl>   \r\n```\r\n\r\n####链接(link)   \r\n注意相对URL(relative URL)和绝对URL(Absolute URL)的区别, 通常相对URL和源连接为内部网址， 绝对URL为外部链接。事实上就是Linux下文件系统的navigation原理。   \r\n\r\n```css\r\n<a href=\"http://google.com\">GoogleMe</a> 绝对URL   \r\n<a href=\"about-us.html\">About</a>   相对URL   \r\n\r\n邮件链接： <a href=\"mailto:goodman@gmail.com\">Email GoodMan</a>    \r\n	会启动用户本地的邮件服务程序。   \r\n新窗口打开： <a href=\"http://newwindow.com\" target=\"_blank\">Another Link</a>    \r\n	加上blank会使得新打开的链接在新的窗口(浏览器标签)打开    \r\n页内跳转： <a href=\"#top\">Back to top</a>    \r\n	跳转到同一页面的其他地方， 使用<h1 id=\"top\"></h1>做标记。   \r\n跳转到其他页面的特定位置：<a href=\"http:/www.htmlandcssbookcom/#bottom\">   \r\n	跳转到其他页面的特定位置， 同样使用id=\"bottom\"做标记。    \r\n```\r\n\r\n####图片(Image)\r\n图片选择的原则：         \r\n\r\n* 尊重版权     \r\n* 相关性     \r\n* 传达信息   \r\n* 符合场景(表达基调)      \r\n* 颜色基调和主题相符       \r\n\r\n图片使用原则：   \r\n\r\n* 能用CSS样式时，别使用图片(例如button的样式)      \r\n* 能使用图标的使用图标字体(icon font),别使用图片图标  \r\n* 使用优化工具优化图片   \r\n* 保存使用正确的格式(format)    \r\n* 使用合适的大小(Size)    \r\n* 使用相对的分辨率(Resolution)   \r\n* 为图片加上说明(alternative text)   \r\n\r\n\r\n```css\r\n<img src=\"images/quokka.jpg\" alt=\"A family of quokka\" title=\"GoodPicture\" />\r\nsrc： 表示图片的url， alt： 关于图片的描述， 如果图片没办法加载就会被显示 \r\ntitle：图片信息，当鼠标悬浮到图片上会显示title的内容\r\n下面是HTML5的Tag：\r\n<figure>\r\n	<img src=\"images/otters.jpg\" alt=\"海狮的照片\">\r\n	<br />\r\n	<figurecaption>可爱的小动物</figurecaption> 为图片加上说明(标题)\r\n</figure>\r\n```\r\n\r\n图片的格式选择：\r\n	1. JPEG  图片有很多的颜色混合， 比如照片\r\n	2. GIF、PNG 图片较少的颜色， 或者大面积颜色相同(flat color)通常使用为logo\r\n\r\n####表格(table)\r\n\r\n```css\r\n<table>\r\n	<tr> 表示表格行(table row)\r\n		<th></th> 表示表格行头(table heading)\r\n		<th scope=\"col\">Saturday</th>\r\n		<th scope=\"col\">Sunday</th>\r\n	</tr>\r\n	<tr>\r\n		<th scope=\"row\">Tickets sold:</th>\r\n		<td>120</td> 表示表格数据(table data)\r\n		<td>135</td>\r\n	</tr>\r\n	<tr>\r\n		<th scope=\"row\">Total sales:</th>\r\n		<td>$600</td>\r\n		<td>$675</td>\r\n	</tr>\r\n</table>\r\n<td colspan=\"2\"> 使得该单元格横跨两列\r\n<td rowspan=\"2\"> 使得该单元格横跨两行\r\n下面是长表格的基本格式\r\n<table>\r\n	<thead>\r\n		<tr>\r\n			<th>表格的头部</th>\r\n			<th>表格的头部</th>\r\n		</tr>	\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>表格数据内容</td>\r\n			<td>表格数据内容</td>\r\n		</tr>\r\n		<tr>\r\n			<td></td>\r\n			<td></td>\r\n		</tr>\r\n	</tbody>\r\n	<tfoot>\r\n		<tr>\r\n			<td>表尾数据</td>\r\n			<td>表尾数据</td>\r\n		</tr>\r\n	</tfoot>\r\n</table>\r\n``` \r\n####表单(Form)\r\n用户通过表单向服务器提供相应的数据，数据通过键值key/value发送给服务器。   \r\n\r\n```css\r\n<form id=\"login\" name=\"login\" method =\"get\"  action=\"http://goodman.html\"> <!--默认的方法是GET -->\r\n    <p>用户名：<input id=\"UserName\" name=\"txtUserName\" type=\"text\" /></p> <!--用户名文本框-->  \r\n    <p>密　码：<input id=\"Passwd\" name=\"txtPWD\" type=\"text\" /></p>         <!--密码文本框-->  \r\n    <p><input id=\"Login\" name =\"subLogin\" type=\"submit\" value=\"提交\" /></p><!--提交按钮-->       \r\n</form>     \r\n```\r\n1. id：表单的唯一标识    \r\n2. name：表单的名字    \r\n3. method：定义表单提交的方法，有两种方法：Post方法和Get方法    \r\n4. action：用于处理表单的服务器端页面（以URL 形式表示）    \r\n	\r\n* 方法GET - 从指定的资源请求数据。 表单数据会附加到URL的后面，提交到服务器处理，这种方法安全性当然不如post方法，因为表单数据会暴露在URL中，但是它的处理效率要比post方法高。 由于URL长度的限制， 所以表单数据长度有限制。        \r\n* 方法POST- 从指定的资源提交要被处理的数据。数据将以数据块的形式提交到服务器，表单数据不会出现在URL中，所以用这种方式提交的表单数据是安全的. 适用于敏感信息的传递(密码,数据库的操作)， 同时POST允许大段数据的传输(上传文件)。       \r\n\r\n','HTML学习笔记， 基础知识。','2016-03-03 11:19:45','shady','PL',0,0,'html-ji-chu',12,''),(4,'HTML 基础(二)','#### 元数据     \r\n1. DOCTYPE  指定了Web浏览器关于页面使用哪个HTML版本进行编写的指令。  \r\n\r\n	```css\r\n	HTML5:   \r\n		<!DOCTYPE html>\r\n	HTML4:\r\n		<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n		\"http://www.w3.org/TR/html4/loose.dtd\">\r\n	XML Desclaration:\r\n		<?xml version=\"1.0\" ?>\r\n	```\r\n2. viewport的作用\r\n\r\n3. role的作用\r\n有时候会看到类似下面的html代码：   \r\n&lt;div class=\"navigation\"  role=\"navigation\">&lt;/div>   \r\n出现role这个属性， 很好奇所以google了一下。role属于WAI-ARIA（Web Accessibility Initiative -- Accessible Rich Internet Applications)的一部分，用于增加标签的语义性,和html5中引进更多的语义标签类似，可帮助访问Web内容和Web应用有困难的用户进行访问（比如用静态的(screen-reading technologies)浏览器浏览用Ajax技术制作的动态网页），用途是帮助残疾人，尤其是需要依靠屏幕阅读器和不能使用鼠标的用户。应用role属性可以设计出更加友好的网站应用。html5里面添加这个属性作为做辅助作用，用于兼容旧的浏览器。\r\n例如\r\n\r\n	```html\r\n	<header role=\"banner\">\r\n	</header>\r\n	```\r\n4. 注释的方法  \r\n\r\n	```html\r\n	<!--这是html注释方式 -->\r\n	/* 这是CSS的注释方法 */\r\n	```\r\n5. id属性     \r\n	id是HTML元素的唯一标识符，可以用于CSS， Javascript的元素定位， 同时支持页内定位(anchor).     其命名规则是由字母或者下划线开头,后面由字母、数字、下划线组成. 不应该在在同一页面上有两个相同的id属性。如果是为了使两个元素具有相同的CSS样式，建议使用相同class属性。    \r\n\r\n	```css\r\n	例如: <p id=\"pullquote\"></p>\r\n	例如: &ltp class=\"trouble\">We are in truble</p>\r\n	```\r\n6. 相关知识     \r\n	* 用div将其他元素组合成整体(group), 使用span可以将行间的元素组合在一起。通过div、span标签， class属性和id属性的组合，  以及加上css可以实现样式的灵活控制。     \r\n	* meta标签用于提供页面的元信息(meta-information)， 可以提供信息给搜索引擎(爬虫使用meta值对网页进行分类)，meta标签的属性定义了与文档相关联的名称/值对。    \r\n	* 转义字符    \r\n  		转义字符串（Escape Sequence），即字符实体（Character Entity）分成三部分：      \r\n	    + 一个&符号，英文叫ampersand；    \r\n	    + 实体（Entity）名字或者是#加上实体（Entity）编号；    \r\n	    + 一个分号。    \r\n\r\n	```css\r\n	定义针对搜索引擎的关键词：\r\n	<meta name=\"keywords\" content=\"HTML CSS\" />\r\n	定义对页面的描述：\r\n	<meta name=\"description\" content=\"基本的HTML知识\" />\r\n	定义页面的最新版本：\r\n	<meta name=\"revised\" content=\"Shady, 2015/02/01/\" />\r\n\r\n	< 	Less-than sign   	&lt;\r\n	> 	greater-than 		&gt; \r\n	& 	Ampersand			&amp;\r\n	\"	Quotation mark		&quot;\r\n	\'	Left single quote	&lsquo;\r\n	©	Copyright symbol	&copy；\r\n	® Register trademark	&reg；\r\n	```\r\n	\r\n####视频(Video)    \r\n有趣的议题： [未来是HTML5还是Flash的时代？(知乎)](\"http://www.zhihu.com/question/19728465\")   \r\n这里接介绍HTML5视频元素：   \r\n\r\n	```css\r\n	<video src=\"video/puppy.mp4\" poster=\"images/puppy.jpg\"\r\n	width=\"400\" height=\"300\" preload controls loop>\r\n	<p>A video of a puppy playing in the snow</p>\r\n	</videl>\r\n	如果下面的选项出现,则表示该选项设置为true(turn on) \r\n	如果没有出现，则是设置为false；\r\n	1. src 表示的是资源的路径(URL)\r\n	2. poster 指定图片的位置(当视频暂停时显示)\r\n	3. width, height 视频的宽高\r\n	4. preload 如果出现该属性，则视频在页面加载时进行加载，并预备播放。\r\n	5. controls 如果出现该属性，则向用户显示控件，比如播放按钮, 允许回放。\r\n	6. loop:  如果出现该属性，则当媒介文件完成播放后再次开始播放。\r\n	7. autoplay： 自动播放    \r\n	8. none: Video 不会自动加载， 除非用户点击播放    \r\n\r\n	source 元素可以链接不同格式视频文件。浏览器将使用第一个可识别的格式：\r\n	<video poster=\"images/puppy.jpg\" width=\"400\"height=\"320\" preload controls loop>\r\n		<source src=\"video/puppy.mp4\" type=\'video/mp4;\' />\r\n		<source src=\"video/puppy.webm\" type=\'video/webm;\' />\r\n		<p>A video of a puppy playing in the snow</p>\r\n	</video>\r\n	1. src 表示的是资源的路径(URL)\r\n	2. type表示的是视频的格式\r\n	```\r\n\r\n#### 音频   \r\n\r\n#### background和background-color的区别：\r\n background: #00ff00 url(\"imgs/ocean.jpg\") no-repeat fixed center;\r\n background包括了:\r\n\r\n* 背景颜色的设置(background-color)\r\n* 背景图片的设置 (background-image)\r\n* 背景图片是否重复(background-repeat)\r\n* 背景图片的位置(background-position)\r\n\r\n#### 浏览器引擎前缀(browser prefix or vender prefix)\r\n1. 什么是浏览器引擎前缀\r\n 浏览器引擎前缀，是一些放在CSS属性前的小字符串，用来确保这种属性只在特定的浏览器渲染引擎下才能识别和生效. \r\n\r\n2. 为什么使用浏览器引擎前缀(Vendor Prefix)\r\n  由于CSS3很多属性尚未成为W3C标准的一部分，因此每种内核的浏览器都只能识别带有自身私有前缀的CSS3属性， 其主要目的是试验一些还未成为标准的的CSS属性，对新出现的标准的CSS3属性特征做实验性实现。所以我们在书写CSS3代码时，需要在部分属性前加上浏览器的私有前缀，使得该内核的浏览器能识别相应的CSS3属性。\r\n\r\n3. 常见的浏览器引擎前缀(Vendor Prefix)\r\n-ms-  	Microsoft   \r\n-moz-  	Mozilla   \r\n-o-    	Opera   \r\n-webkit- Safari, Chrome, 以及其他基于WebKit的browsers   \r\n\r\n4. 需要Vendor Prefixes的CSS3属性\r\n常见的有： flex属性， column属性， box-shadow属性， 移动和变换属性(transition-*)   \r\n具体CSS3属性可以通过下面的网站查看： [cniiuse](http://caniuse.com/)   \r\n\r\n5. 自动化工具\r\n使用CSS3部分属性时，需要添加verder prefix觉得很繁琐和麻烦，下面介绍一款开源工具， 可以完全不需要自己考虑浏览器的prefix问题，通过工具自动检测到需要添加前缀的属性， 自动添加vender prefix。   \r\n先上Github地址[autoprefixer](https://github.com/postcss/autoprefixer)， 正如工具的名称autoprefixer自动添加前缀，它可以根据当前浏览器的流行性和特性自动添加浏览器引擎前缀。该工具支持个性化参数设置，Google，Twitter和Taobao都有使用这款工具.    \r\n下面有一个Demo可以试用： [Demo](http://autoprefixer.github.io/)   \r\n\r\n###Reference\r\n[浏览器前缀](http://te-webtraining.azurewebsites.net/cn/samples/vendor-prefixes.html)','Html和CSS学习的笔记， 方便以后得查阅。','2016-03-03 11:27:11','shady','PL',10,2,'html-ji-chu-er',12,'http://www.htmlandcssbook.com/images/slideshow-home/triplicate.jpg'),(5,'CSS基础','###显示(Display)\r\n 每一个HTML元素都有默认的display属性，在CSS中采用display来覆盖元素默认的display属性，常用的display属性有如下： \r\n\r\n    * inline  	此元素会被显示为内联元素，元素前后没有换行符。\r\n    * block  	此元素将显示为块级元素，此元素前后会带有换行符。\r\n    * inline-block 既具有block的宽高特性又具有inline的同行元素特性。即可规定该元素的width和height.   \r\n    * none  	使用 display: none会隐藏该html元素，不保留元素的的空间， 而使用visibility: hiddden则会保留元素的空间,通常被用于DOM操作。\r\n\r\n###盒模型(Box Model)\r\n![BoxModel](http://7xo4sa.com1.z0.glb.clouddn.com/boxmodel-image.png)\r\n	\r\n> 在网页中， 所有的元素都可以被当成一个个盒子(Box)(Every element on a page is a rectangular box.)  \r\n\r\n#####元素的实际宽度和实际高度的计算公式：\r\n	元素的实际宽度和高度的计算包括了margin, padding 和border的值。\r\n\r\n* 实际宽度: \r\n> margin_right + border_right + padding_right + width + padding_left + border_left + margin_left\r\n\r\n* 实际高度：\r\n> margin_top + border_top + padding_top + height + padding_bottom + border_bottom + margin_bottom \r\n\r\n##### 宽度和高度\r\n 每个元素都有默认的高度和宽度值， 块级(block)元素默认的宽度是100%， 而内联元素(inline)默认的宽度取决于内容， 两者的高度均取决于内容。 值得注意的是内联元素(inline)并不能通过CSS规定元素的width和height。\r\n\r\n##### Margin 和 Padding \r\n  Margin： CSS 边距属性，定义元素周围的空间。通过使用单独的属性，可以对上、右、下、左的外边距进行设置。也可以使用简写的外边距属性同时改变所有的外边距。允许对元素周围空间大小设定， 使得元素和其他元素保持一定距离。\r\n  常用的格式：(这里的格式同样适用于padding)   \r\n\r\n	* margin: 0px 5px 10px 5px; 顺时针方向： top right bottom left\r\n	* margin: 10px 20px; 分别表示上下(top-bottom)值 左右(left-right)值\r\n	* margin: 10px; 表示四个方向的值\r\n	* margin-top: 20px; margin-left margin-right margin-bottom逐个规定。\r\n需要注意的是 垂直方向(top and bottom)的margin不适用于级联(inline-element)元素, 而padding则在四个方向都适用。 同时padding和margin颜色都是完全透明， 没有颜色属性。 \r\n\r\n#####边框Border\r\n  border: 6px solid #949599; border有不同的样式，分别为：solid, double, dashed, dotted.\r\n\r\n	* 可以只设置边框的一边，例如 border-bottom: 6px solid #898989; border-top\r\n	* 只改变border一边的宽度：border-bottom-width: 12px;\r\n	* 同样还有修改样式和颜色：border-bottom-style, border-left-color: #898989;\r\n	* border-radius: 5px;表示四个方向的值， border-radius: 6px 10px;则表示了top-left/bottom-right 和 top-right/bottom-left 角的弧度值。 \r\n	* 同样也可以使用百分比来设置border-radius 例如： border-radius: 50%;\r\n	* border-top-right-radius： 10px; 规定了右上角的弧度， 其他方向也适用\r\n\r\n#####Box-sizing\r\n1. 在CSS3中引入了Box-sizing这个属性， 改变了box的实际宽度和高度的计算。 这个属性有三个值可以设置， 分别为： content-box, padding-box, border-box\r\n2. 浏览器前缀：(vendor prefixes)\r\n	* Mozilla Firefox: -moz-\r\n	* Microsoft Internet Explorer: -ms-\r\n	* Webkit (Google Chrome and Apple Safari): -webkit-\r\n3. content-box	\r\n 	如果没有指明使用box-sizing属性，则默认是使用了box-sizing: content-box; 这里盒子的实际宽度和高度计算和上面的计算方式一样。 \r\n\r\n	```css\r\n	 div {\r\n	  -webkit-box-sizing: content-box;\r\n	     -moz-box-sizing: content-box;\r\n	          box-sizing: content-box;\r\n	}\r\n	```\r\n3. padding-box \r\n把padding属性的值计算入width 和height的值， 也就是说box的实际宽度的计算方式是： width + border_left + border_right + margin_left + margin_right\r\n4. border-box	\r\n把border属性的值和padding属性的值都计算进width和height的值， 这样box的实际宽度的计算方式就是： width + margin_left + margin_right\r\n通常我们会使用border-box， 这样计算起box的实际宽度和高度更加简单。例如我们规定width: 40%; 这样就算加入了padding和border的属性， 同样能保证该元素的width只占用其父元素的40%。\r\n\r\n####float\r\nfloat属性定义元素在哪个方向浮动,常用的属性值有： left right none inherit. 通常被用于指定元素在父元素中的位置。当多个元素使用float属性时， 使得元素悬浮排列在一起，形成一个多列的布局。\r\n需要注意的是如果float属性可能修改一个元素的display属性的值， 因为float是以元素的display为块级元素(block)基础的， 所以当对&lt;span>元素使用float属性时，会修改display属性。\r\n\r\n####删除掉inline-block元素间空格\r\n1. 利用HTML标记的方法，将元素的闭合标记和下一个元素的开始标记靠在一起\r\n\r\n```css3\r\n<ul>\r\n	<li>First item</li\r\n	><li>Second Item</li\r\n	><li>Third Item</li>\r\n</ul>\r\n```\r\n2. 利用注释的方法， 将HTML元素间用注释填充，使得它们之间没有空白：\r\n\r\n	```css\r\n	<ul>\r\n		<li>First item</li><!--\r\n	 --><li>Second Item</li><!--\r\n	 --><li>Third Item</li>\r\n	</ul>\r\n	```\r\n\r\n	\r\n#### References\r\n[CSS Box-sizing](http://www.w3cplus.com/content/css3-box-sizing)\r\n[CSS And HTML](http://learn.shayhowe.com/html-css/opening-the-box-model/)','CSS的盒模型以及基础的Display属性。','2016-03-03 11:46:09','shady','PL',0,0,'cssji-chu',12,''),(6,'Web基础','### Web的基础知识    \r\n网页的三个部分：   \r\n\r\n  1. 结构(Structure)    结构化标准语言： HTML XHTML   \r\n  2. 表现(Presentation) 表现标准语言： CSS   \r\n  3. 行为(Behavior) 行为标准语言： 对象模型DOM Javascript   \r\n\r\n----\r\nWeb开发的兼容性问题:   \r\n\r\n  * 不同操作系统   \r\n  * 不同版本的浏览器(旧版本的浏览器) 原则： 尽量确保主流浏览器兼容    \r\n  * 不同的终端访问(移动终端和PC端) 自适应网页设计(Responsive Web Design)     \r\n  \r\n  ----\r\n\r\nWeb的工作方式：  \r\n\r\n  1. 浏览器地址栏输入URL的时候，浏览器会先去请求DNS服务器，通过DNS获取相应的域名对应的IP。   \r\n  2. 通过IP地址找到IP对应的服务器后，要求建立TCP连接， 发送HTTP Request(请求包)   \r\n  3. 服务器接收到请求包后开始处理请求包，服务器调用自身服务，返回HTTP Response（响应）包   \r\n  4. 客户端收到来自服务器的响应后开始渲染这个Response包里的主体（body），等收到全部的内容随后断开与该服务器之间的TCP连接。   \r\n\r\n----\r\n### URL和DNS解析  \r\n\r\n##### URL(Uniform Resource Locator)是“统一资源定位符”的英文缩写，是文件在网络中的唯一标识符,    基本格式如下：   \r\n\r\n>scheme://host[:port#]/path/.../[?query-string][#anchor]   \r\n<协议>://<主机>：<端口>/<路径>\r\nscheme         指定低层使用的协议(例如：http, https, ftp)   \r\nhost           HTTP服务器的IP地址或者域名   \r\nport#         HTTP服务器的默认端口是80，这种情况下端口号可以省略。如果使用了别的端口，必须指明，例如 http://www.cnblogs.com:8080/   \r\npath           访问资源的路径     \r\nquery-string   发送给http服务器的数据     \r\nanchor         锚   \r\n\r\n##### DNS(Domain Name System)域名系统，命名体现其为域层次的网络服务系统，    主要任务是将域名解析为IP地址。        \r\n  1. 解析域名时， 查看本地的hosts文件是否有这个网址的映射关系， if(yes): done; else: next;   \r\n  2. 查找本地的DNS解析器缓存  if(yes): done; else: next;   \r\n  3. 查找TCP/IP参数设置的首选DNS服务器，如果本地服务器(首选服务器)成功， 则称此解析具有权威性. if(yes): done; else: next;   \r\n  4. 如果本地服务器已缓存了此网址的映射关系， 则返回解析结果(不具权威性解析) if(yes): done; else: next;   \r\n  5. 如果本地服务器本地区域与缓存解析都失效， 则根据本地服务器的设置(是否转发)进行查询.   如果不转发，本地DNS就把请求发至 “根DNS服务器”，“根DNS服务器”收到请求后会判断这个域名(.com)是谁来授权管理，并会返回一个负责该顶级域名服务器的一个IP。   \r\n  6. 转发模式，此DNS服务器就会把请求转发至上一级DNS服务器，由上一级服务器进行解析，上一级服务器如果不能解析，或找根DNS或把转请求转至上上级，以此循环。不管是本地DNS服务器用是是转发，还是根提示，最后都是把结果返回给本地DNS服务器，由此DNS服务器再返回给客户机    \r\n\r\n解析期间可出现域名劫持： 域名劫持是互联网攻击的一种方式，通过攻击域名解析服务器（DNS），或伪造域名解析服务器（DNS）的方法，把目标网站域名解析到错误的地址从而实现用户无法访问目标网站的目的。      \r\n\r\n### HTTP协议    \r\n1. http（超文本传输协议）是一个基于请求与响应模式的、无状态的、应用层的协议，常基于TCP的连接方式。(服务器上有一个进程不断地监听TCP 80 端口)。     \r\n\r\n  * HTTP的无状态(stateless)特性简化了服务器的设计， 使服务器更容易支持大量并发的HTTP请求。     \r\n  * HTTP使用了面向连接的TCP连接作为运输层的协议， 保证数据的可靠性传输。   \r\n  * HTTP 协议首先和服务器建立TCP连接(三次握手)， 第三次握手时， 客户端将HTTP报文发送给服务器端。  \r\n  * 持续连接(persistent connection)就是服务器在响应后仍然保持这条连接==链接，   使同一客户和服务器可以继续在这条连接上传送后续的HTTP请求报文和响应报文。    \r\n  * 代理服务器(proxy Server) 又称为万维网高速缓存(Web cache)，代理服务器把最近的请求和响应暂存到本地, 如果新的请求和暂存的请求一致， 则返回缓存的响应。(这里客户端和代理服务器建立TCP连接， 如果请求对象不在代理服务器中， 则由代理服务器代表请求用户发出请求)       \r\n\r\n----\r\n2. HTTP的报文结构     \r\n  HTTP报文分为请求报文和响应报文， 主要由三部分组成：           \r\n  1. 开始行(请求报文称为请求行， 响应报文称为状态行)    \r\n  2. 首部行， 用来说明浏览器、服务器或报文主体的一些信息。    \r\n  3. 实体主体(entity body)， 请求报文一般不用这字段， 响应报文也可能没有这字段。    \r\n  \r\n######请求报文(请求行的三个内容):   \r\n  + 方法， 对所请求对象的操作     \r\n    下面列举主要的方法：    \r\n    * GET 请求读取由URL标志的信息   \r\n    * POST 给服务器添加信息   \r\n    * PUT 在指明的URL下存储一个文件   \r\n  + 请求资源的URL     \r\n  + HTTP的版本      \r\n\r\n----  \r\n#####响应报文的状态行：状态行包括三项内容， 即HTTP的版本， 状态码， 以及解释状态码的简单短语。    \r\n状态码用来告诉HTTP客户端，HTTP服务器是否产生了预期的Response.   \r\nHTTP/1.1中定义了5类状态码， 状态码由三位数字组成，第一个数字定义了响应的类别   　\r\n     \r\n* \'1XX\'  提示信息 - 表示请求已被成功接收，继续处理     \r\n* \'2XX\'  成功 - 表示请求已被成功接收，理解，接受     \r\n* \'3XX\'  重定向 - 要完成请求必须进行更进一步的处理     \r\n* \'4XX\'  客户端错误 -  请求有语法错误或请求无法实现   \r\n* \'5XX\'  服务器端错误 -   服务器未能实现合法的请求     \r\n\r\n常见的状态码：   \r\n  \r\n* 202   OK  表明该请求被成功地完成，所请求的资源发送回客户       \r\n* 302   FOUND 重定向，新的URL会在response中的Location中返回，浏览器将会使用新的URL发出新的Request    \r\n* 304 Not Modified  代表上次的文档已经被缓存了， 还可以继续使用      \r\n* 400 Bad Request  客户端请求与语法错误，不能被服务器所理解     \r\n* 403 Forbidden 服务器收到请求，但是拒绝提供服务     \r\n* 404 Not Found 请求资源不存在（输错了URL）         \r\n* 500 Internal Server Error 服务器发生了不可预期的错误     \r\n* 503 Server Unavailable 服务器当前不能处理客户端的请求，一段时间后可能恢复正常   \r\n  \r\n----\r\n####Cookies \r\n  Cookie表示在HTTP服务器和客户端之间传递的状态信息， 当访问网址时， 服务器会生成一个唯一标识码， 并以此为索引在服务器后端的数据库产生一个项目， 接着在给用户的响应报文中加入Set-cookie的首部行。 用户收到响应报文后， 浏览器会在它管理的特定Cookie加入一行， 以后用户访问该网址时， 浏览器将在发送的HTTP请求报文中加入该网址的标识码。   \r\n\r\n----\r\n####静态页面和动态页面\r\n1. 静态文档(页面)， 指的是创建后用户多次访问， 内容不会更改， 其最大优点是方便快速， 缺点是缺乏灵活性。   \r\n2. 动态文档(页面), 指的是文档的内容在浏览器访问时才由应用程序生成。    由应用程序对浏览器发来的数据进行处理， 并输出HTML格式的文档。通用网关借口CGI(Common Gateway Interface)， 定义了动态文档应如何创建， 输入数据如何提供给应用程序， 以及输出的结果如何使用。\r\n      ','Web的基础知识， 常用的概念和网络知识','2016-03-03 11:58:33','shady','PL',0,0,'webji-chu',8,'http://www.yonescat.com/sites/default/files/field/image/world-wide-web-milestones.jpg'),(7,'利用CDN加速网站加载','导读：今天在使用Django的collesctstatic命令时，不太明白为什么需要这个步骤。经过Google后，明白了collectstatic是将分散在不同路径的静态文件整合起来，放置到同一文件夹，以方便部署到其他服务器(nginx)或者托管到CDN服务商的服务器上，起负载均衡作用。\r\n\r\n#### 什么是CDN\r\nCDN全称是Content Delivery Network,既内容分发网络，其目的是通过在现有的Internet中增加一层新的CACHE(缓存)层，将网站的静态内容发布到最接近用户的网络的边缘，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。内容发布网络(CDN)是一个经策略性部署的整体系统，包括分布式存储、负载均衡、网络请求的重定向和内容管理４个要件，而内容管理和全局的网络流量管理(Traffic Management)是CDN的核心所在。通过用户就近性和服务器负载的判断，CDN确保内容以一种极为高效的方式为用户的请求提供服务。总的来说，内容服务基于缓存服务器，也称作代理缓存(Surrogate)，它位于网络的边缘，距用户仅有”一跳”(Single Hop)之遥。\r\n\r\n![CDN Machanism](http://7xo4sa.com1.z0.glb.clouddn.com/cdn.jpg)\r\n\r\n####为什么使用CDN\r\n1.可以多域名加载资源，因为浏览器限制了对同一域名的并发连接，而CDN文件由于存储在其它服务器上，可以加速加载.   \r\n2. 浏览器可能已经加载并缓存了通用的js或css样式库的文件， 而无需再加载   \r\n3. CDN服务提供商的专业化(规模)效应， 提供高可用性， 更低的网络延迟和丢包率。   \r\n4. 分布式数据中心， 使得网站静态内容更加离用户更近   \r\n5. 提供负载均衡，安全保护功能， 同时节省带宽和服务器费用   \r\n\r\n####CDN的基本原理\r\n  据统计，Internet上超过80%的用户重复访问20%的信息资源，给缓存技术的应用提供了先决的条件。 采用网络缓存技术，其目的就是减少网络中冗余数据的重复传输，使之最小化，将广域传输转为本地或就近访问。互联网上传递的内容，大部分为重复的Web/FTP数据，利用Cache服务器及应用Caching技术的网络设备，可大大优化数据链路性能，消除数据峰值访问造成的结点设备阻塞。   \r\n  Cache服务器具有缓存功能，所以大部分网页对象（Web page object），如html, htm, php等页面文件，gif,tif, png, bmp等图片文件，以及其他格式的文件，在有效期（TTL）内，对于重复的访问，不必从原始网站重新传送文件实体，只需通过简单的认证（Freshness Validation）- 传送几十字节的Header，即可将本地的副本直接传送给访问者。由于缓存服务器通常部署在靠近用户端，所以能获得近似局域网的响应速度，并有效减少广域带宽的消耗。缓存服务器的体系结构与Web服务器不同，缓存服务器能比Web服务器获得更高的性能，缓存服务器不仅能提高响应速度，节约带宽，对于加速Web服务器，有效减轻源服务器的负荷是非常有效的。\r\n\r\n![Mechanism](http://7xo4sa.com1.z0.glb.clouddn.com/Procedure.jpg)\r\n\r\n####国内可用的CDN\r\n今天使用bootstrap官方的CDN以及Google的AjaxCDN发现测速时一直加载不出来， 万恶的墙。如果使用了google的字体(font)同样会出现问题，作为学生狗，没办法只能寻求国内的免费CDN。 下面是国内主要的几个提供商：\r\n\r\n1. [七牛云存储 开放静态文件CDN](http://staticfile.org/)\r\n2. [又拍云JS库加速](http://jscdn.upai.com/)\r\n3. [Bootstrap中文网  BootCDN](http://www.bootcdn.cn/)\r\n4. [百度开发者](http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs)\r\n5. [360前端公共库CDN服务](http://libs.useso.com/)\r\n\r\n对于国外的站点，建议使用官方或者google提供的CDN，对于可能不稳定的CDN服务，可以采用混合办法。当CDN服务不可用时(unavailable)，返回调用自己服务器的本地文件。可以参照下面来至Stackoverflow的方案：\r\n\r\n```python\r\n<head>\r\n  <!-- Bootstrap CSS CDN -->\r\n  <link rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css\">\r\n</head>\r\n<body>\r\n  <!-- APP CONTENT -->\r\n  <!-- jQuery CDN -->\r\n  <script src=\"//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js\"></script>\r\n  <!-- jQuery local fallback -->\r\n  <script>window.jQuery || document.write(\'<script src=\"/local/jquery.min.js\"><\\/script>\')</script>\r\n  <!-- Bootstrap JS CDN -->\r\n  <script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js\"></script>\r\n  <!-- Bootstrap JS local fallback -->\r\n  <script>if(typeof($.fn.modal) === \'undefined\') \r\n  {document.write(\'<script src=\"/local/bootstrap.min.js\"><\\/script>\')}</script>\r\n  <!-- Bootstrap CSS local fallback -->\r\n  <script>\r\n    $(document).ready(function() {\r\n    var bodyColor = $(\'body\').css(\'color\');\r\n    if(bodyColor != \'rgb(51, 51, 51)\') {\r\n    $(\"head\").prepend(\'<link rel=\"stylesheet\" href=\"/local/bootstrap.min.css\">\');}});\r\n  </script>\r\n</body>\r\n```\r\n\r\n#### References\r\n[7 Reasons to use a Content Delivery Network](http://www.sitepoint.com/7-reasons-to-use-a-cdn/)    \r\n[知乎：国内有哪些靠谱的 Javascript 库 CDN可用？](https://www.zhihu.com/question/20227463)   \r\n[CDN（内容分发网络）技术原理](http://blog.jobbole.com/30508/)     \r\n','今天在使用Django的collesctstatic命令时，不太明白为什么需要这个步骤。经过Google后，明白了collectstatic是将分散在不同路径的静态文件整合起来，放置到同一文件夹，以方便部署到其他服务器(nginx)或者托管到CDN服务商的服务器上，起负载均衡作用。','2016-03-03 12:03:14','shady','PL',0,0,'li-yong-cdnjia-su-wang-zhan-jia-zai',8,'http://www.cloudvps.com/files/kb/CDN/CDN.request-flow.png'),(8,'MySQL数据迁移和备份','####实现不同服务器数据库的迁移\r\n**目标： 尽量短的停机， 实现无缝的迁徙.**\r\n这里采用mysqldump进行备份， 对个人博客数据库的迁徙,数据量很小.基本流程是使用mysqldump进行导出， 然后使用scp传输到另外的server， 再进行异地数据库重建.    \r\n\r\n* mysqldump客户端可用来转储数据库或搜集数据库进行备份或将数据转移到另一个SQL服务器不一定是一个MySQL服务器)。转储包含创建表和/或装载表的SQL语句。\r\n* mysqldump所产生的备份文件是sql语句,可用来重新构建数据库的sql文件.由于文件里面存储的是文本格式， 所以可以实现高度压缩，同时允许指定备份的粒度,无需完整备份.mysqldump可以有很多参数设置(options),让你高度自由控制备份的方式，使用mysqldump时有默认的参数设置， 基本上能满足大部分情况.(in most case) \r\n\r\n----\r\n先看基本操作，下面载再详解：\r\n\r\n```mysql\r\n1. 使用mysqldump备份,生成[databse name].sql文件  \r\n$mysqldump -u root -p [database name] > [database name].sql\r\n2. 使用scp将该文件传输到目标服务器上 \r\n$scp [databse name].sql [username]@[servername]:/path/to/existed/directory/\r\n3. 利用刚才传输的文件在目标服务器上对数据库进行恢复(恢复时,应先新建数据库)\r\n$mysql -u root -p newdatabse < /path/to/[databse name].sql\r\n```\r\n命名小技巧：\r\n\r\n#### 修改数据库的编码(这里使用example作为示例数据库名)\r\n1. 查看数据库的编码\r\n\r\n```python\r\nmysql> show create database example\r\n可以看见当前数据库的编码为 latin1\r\n+----------+-------------------------------------------------------------------+\r\n| Database | Create Database                                                   |\r\n+----------+-------------------------------------------------------------------+\r\n| example  | CREATE DATABASE `exmaple` /*!40100 DEFAULT CHARACTER SET latin1 */|\r\n+----------+-------------------------------------------------------------------+\r\n1 row in set (0.00 sec)\r\n```\r\n2. 修改数据库编码为utf8编码.\r\n\r\n```python\r\nmysql> alter database example charset=utf8;\r\nmysql> show create database example;\r\n+----------+------------------------------------------------------------------+\r\n| Database | Create Database                                                  |\r\n+----------+------------------------------------------------------------------+\r\n| example  | CREATE DATABASE `example` /*!40100 DEFAULT CHARACTER SET utf8 */ |\r\n+----------+------------------------------------------------------------------+\r\n1 row in set (0.00 sec)\r\n```\r\n3. 如果修改的数据库是空白的,则完成,否则还需要修改数据库里面table的编码\r\n	\r\n```python\r\n1. 查看table的编码(这里以content为示例表名)   \r\nmysql> show table content;\r\n2. 修改table的编码， 修改为utf8\r\nmysql> alter table content charset=utf8;   \r\n```\r\n4. 创建数据库时， 指定使用的编码  \r\n\r\n```python\r\nmysql> create databse example charset=utf8;\r\nmysql> show create database example;\r\n+----------+------------------------------------------------------------------+\r\n| Database | Create Database                                                  |\r\n+----------+------------------------------------------------------------------+\r\n| example  | CREATE DATABASE `example` /*!40100 DEFAULT CHARACTER SET utf8 */ |\r\n+----------+------------------------------------------------------------------+\r\n1 row in set (0.00 sec)\r\n```\r\n\r\n####MySQl安全设置\r\n1. 开启和关闭mysql服务\r\n\r\n```python \r\nroot@HackLab:~# sudo /etc/init.d/mysql start   开启服务\r\nroot@HackLab:~# sudo /etc/init.d/mysql stop    关闭服务\r\nroot@HackLab:~# sudo /etc/init.d/mysql restart 重启服务\r\n```\r\n2. 安全修改 \r\n\r\n* 使用mysql_secure_installation进行安全设置， 可以删除匿名用户， 禁止远程root登录, 移除测试数据库.\r\n\r\n  	![Mysql Security](http://7xo4sa.com1.z0.glb.clouddn.com/mysqlSecurity.png)\r\n* 修改默认的root名字， 建议使用独立的mysql用户\r\n\r\n  ```python\r\n  use mysql;\r\n  update user set user=\'newRootName\' where user=\'root\';\r\n  flush privileges;\r\n  ```\r\n* 修改mysql端口号， Linux通过修改配置文件my.conf来实现\r\n\r\n  ```python\r\n  port = 3306   #修改mysql端口可以一定程度上防止端口扫描工具的扫描.\r\n  ```\r\n\r\n3. 修改账户密码   \r\nMySQL 5.7.6 及以后的版本    \r\n\r\n```python\r\nALTER USER \'root\'@\'localhost\' IDENTIFIED BY \'newpassword\';\r\n```\r\n对于MySQL5.7.5和以前版本  \r\n\r\n```python\r\nSET PASSWORD FOR \'root\'@\'localhost\' = PASSWORD(\'newpassword\');\r\n```\r\n####MySQL命名建议\r\n原则：一致(Consistent)原则， 无论采用哪种惯例(convention)， 在该项目中就坚持沿用该惯例， 下面是一些建议：\r\n  1. 使用小写字母命名， 单词间使用下划线_分开， 单词使用单写形式\r\n  2. 对于id， 使用类如user_id, book_id这类的命名\r\n  3. 相关的应用的数据表使用同一前缀， 前缀名称一般不超过5个字\r\n\r\n####赋予其他用户创建数据库权利\r\n\r\n```python\r\nGRANT ALL PRIVILEGES ON `username\\_%`.* TO \'username\'@\'%\';\r\n```\r\n使用上面的语句，数据库用户则可以创建以username_*开始的数据库，而无需root用户为其创建数据库,再将对应数据库的权限赋予该用户。 这种方法相对于 \r\n\r\n```\r\nGRANT ALL PRIVILEGES ON *.* TO \'username\'@\'localhost\'; \r\n```\r\n给了更少的权限，相对更安全， 同时由于数据库命名前缀名使用了用户的名字，可以知道谁创建了数据库。\r\n','MySQL数据迁移， 以及数据库编码','2016-03-03 12:08:54','shady','PL',0,0,'mysqlshu-ju-qian-yi-he-bei-fen',6,''),(9,'CSS属性','####Color相关属性\r\n1. 表示形式：\r\n	1. RGB值(RGB Value)\r\n		color: rgb(100, 100, 90);\r\n		表示: 100 red, 100 green, 99 blue;  \r\n	2. 十六进制编码(HEX Codes)\r\n		color: #ee3e80;\r\n	3. 颜色名字(Color Names)\r\n		color: DarkCyan;\r\n		只用 147 种颜色支持.\r\n通常是使用颜色选择器(color picker)进行颜色挑选, 我喜欢google的[material design](https://www.google.de/design/spec/style/color.html)\r\n\r\n2. background-color表示   \r\n	backgroundColor 属性设置元素的背景颜色， CSS将HTML中的元素都视为有一个箱子(Box)包裹住,所以每个元素都可以有背景颜色的属性，表示的是箱子的背景颜色， 默认颜色是透明的(transparent),通常浏览器窗口的背景颜色是白色的。\r\n\r\n	```css\r\n	p .one{\r\n		background-color: rgb(0,0,0);\r\n		opacity: 0.5;   /* CSS3 中表示背景颜色的透明度 */\r\n	}\r\n	/* 上面的CSS样式可以被修改为下面的*/\r\n	p .one{\r\n		background-color: rgb(0,0,0); /* 旧的浏览器不支持CSS3会采用这个规则(fallback) */\r\n		background-color: rgba(0,0,0,0.5);  /* rgba允许第四个参数， 作为opacity的值*/\r\n	}\r\n	```\r\n3. 颜色设计规则   \r\n\r\n> The interaction of colors in a design through complementation, contrast, and vibrancy. 视觉互补， 视觉对比, 视觉冲击\r\n\r\n  1. 网页设计的核心是体现内容，应将内容置于首位，而背景颜色只是为了突出网址的内容.适宜选用简单的背景颜色作为背景，提高内容的可读性.\r\n  2. 页面不易使用过多颜色， 这样会难以控制，选定基调(背景颜色)后，可以使用一种颜色突出显示(高亮色), 可以在给高亮颜色添加变化， 即在高亮色周围选定其他颜色. \r\n  3. 颜色可以引导用户的注意力，使用有吸引力的颜色引导用户到你想要用户注意的元素，同时可以利用颜色营造一种氛围，表达一种情感.\r\n	\r\n	* 大段的字体通常是采用深颜色的字体，和比较浅的颜色做背景， 注意视觉对比(contract)的实现\r\n	* 字体颜色设置使用深灰色比较适合阅读(#333333 -- #666666)\r\n	* 背景颜色适合灰/白色， 选色范围(#FFFFFF~#CCCCCC)\r\n	下面推荐的是在线颜色对比查看： [Color Contrast Check](http://snook.ca/technical/colour_contrast/colour.html#fg=666666,bg=CCCCBF)\r\n\r\n#### Text相关属性   \r\n1. font-family \r\n三种常见字体：Serif， Sans-Serif, Monospace![Three common font](http://7xo4sa.com1.z0.glb.clouddn.com/fontFamily.png)\r\n	例子： font-family: Georgia, Times, serif; font-family: \"Courier New\", Courier,\r\nmonospace;字体按照优先顺序排列，逗号进行连接，浏览器会按照这个顺序查找这些字体, 如果不可用， 最终会使用serif字体。基本的设计原则是一个页面不要出现超过三种字体.\r\n\r\n	```css\r\n		font-face允许你使用外部字体\r\n		@font-face{\r\n			font-family: \'ChunkFiveRegular\'; \r\n			src: url(\'fonts/chunkfive.eot\');\r\n		}\r\n	```\r\n2. font-weigth 字体的磅数\r\n	* normal\r\n	* Bold\r\n    \r\n\r\n3. font-style 字体的风格\r\n	* Normal 正常\r\n	* Italic 斜体\r\n	* Oblique 偏斜体\r\n   \r\n\r\n4. font-size 字体的大小\r\n\r\n	```python\r\n	h1{\r\n		font-size: 200%;  /* 百分百(Percentages) 默认基数是16px */\r\n	}\r\n	h1{\r\n		font-size: 30px;   /* 像素 Pixels */\r\n	}\r\n	h1{\r\n		font-size: 1.5em;  \r\n	}\r\n	默认大小设置：\r\n	h1   	24px	\r\n	h2 		18px;	\r\n	h3 		14px;	\r\n	body 	12px;	\r\n	```\r\n5. text-transform 字体大小写转换\r\n	* uppercase   	大写字母  \r\n	* lowercase		小写字母\r\n	* capitalize	大写每个词第一格字母\r\n    \r\n6. text-decoration 字体修饰\r\n	* none 			没装饰\r\n	* underline		下划线\r\n	* line-through	删除线\r\n	* overline		上划线\r\n	* blink			忽隐忽现(不推荐使用)\r\n    \r\n7. Leading(line-height)行距   \r\n	行之间的距离\r\n\r\n	```css\r\n	p {\r\n		line-height: 1.4em;\r\n	}\r\n	```\r\n\r\n\r\n8. letter-spacing, world-spacing 字母间的距离，词汇间的距离\r\n\r\n	```css\r\n	字母间的距离适合用于大写字母间.\r\n		h1, h2 {\r\n		text-transform: uppercase;\r\n		letter-spacing: 0.2em;\r\n		}\r\n		.credits {\r\n		font-weight: bold;\r\n		word-spacing: 1em;\r\n		}\r\n	```\r\n9. text-align 字体对齐\r\n	* left\r\n	* right\r\n	* center\r\n	* justify\r\n10. text-indent字体缩进\r\n\r\n	```css\r\n	.credits {\r\n		text-indent: 20px;\r\n	}\r\n	```\r\n11. text-shadow字体阴影\r\n\r\n	```css\r\n	<p style=\"font-size: 20px; text-shadow: 0px 0px 20px #666666;\">We are different</p>\r\n	第一个参数： 表示向左或向右的距离\r\n	第二个参数： 表示向上或向下的距离\r\n	第三个参数(可选)： 表示阴影的大小\r\n	第四个参数： 阴影的颜色 \r\n	```\r\n12. first-letter first-line 第一个字母或第一行\r\n\r\n	```css\r\n	p .intro:first-letter{\r\n		font-size: 200%;\r\n	}\r\n	p.intro:first-line{\r\n		font-weight: bold;\r\n	}\r\n	```\r\n\r\n#### &lt;a>标签    \r\n通常<a>标签在浏览器中显示是蓝色同时有下划线.  使用CSS伪类可以修改<a>标签这些行为。\r\n\r\n	```css\r\n	a:link {   /* 可以改变a标签的显示状态*/\r\n		color: deeppink;\r\n		text-decoration: none;\r\n	}\r\n	a:visited { /* a标签被访问后的状态 */\r\n		color: black;\r\n	}\r\n	a:hover {  /* 当鼠标悬浮后出现的效果 */\r\n		color: deeppink;\r\n		text-decoration: underline;\r\n	}\r\n	a:active { /* 访问当前页的效果 */\r\n		color: darkcyan;\r\n	}\r\n	a:focus{\r\n		color: blue;  /* :focus 选择器用于选取获得焦点的元素。 */\r\n	}\r\n	```\r\n','CSS 常见属性， 及颜色设计原则','2016-03-03 13:47:57','shady','PL',0,0,'cssshu-xing',12,''),(10,'CSS基础 (二)','####CSS作用   \r\n样式定义，控制HTML元素的样式，解决内容和表现分离的问题. CSS可以层叠定义， 其优先级是： 浏览器默认 --> 外部样式(link) -->内部式样表(<head>标签内部) --> 内联式样(html元素内部) 如果在同一层次有应用于同一元素的规则，则应用那条更加仔细(Specificity)， 你也可以选择在属性后面加上!important使得该规则具有最高的优先级。    \r\n其组成部分是： 选择权(selector) 以及 一条或多条的声明(declaration).    \r\n例如： p { font-family: Arial; } 声明的格式(属性:属性值;)   \r\n\r\n----\r\n####CSS的样式	   \r\n1. 使用外部CSS样式(一个页面可以使用多个外部样式)   \r\n\r\n```css\r\n<link link=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n```\r\nlink 指的是该CSS样式文件所在的位置(URL)    \r\nrel 表明的是指向的是样式表文件(stylesheet)    \r\n优点： 使用外部样式，能较好地实现样式和内容分离， 同时外部样式可以被多处复用(减少网页代码量, 外部样式被保存在浏览器的缓存里，加快加载过程)，做到一处修改,即可修改多处，有利于网址的SEO(higher page ranking) 网络爬虫可以更快、准确获取文档的内容(没有混入CSS样式)。    \r\n2. 内部样式(internal CSS)    \r\n\r\n```css\r\n<style>\r\n	body{\r\n	background-color: rgb(185, 179, 175);\r\n}\r\n```\r\n优点：用于测试调错， 新手学习    \r\n3. 内联样式(inline CSS) \r\n\r\n```css\r\n<P style=\"color:red; font-size: 20px;\">This is just an example.</p>\r\n```\r\n优点: 用于测试调错，适用于小网站,网页表较少的，可以减低HTTP请求次数    \r\n\r\n####CSS选择器    \r\nCSS选择器是区分大小写的，下面介绍几种常见的选择器.    \r\n1. 全局选择器(Universal Selector)    \r\n\r\n```css\r\n* {\r\n	margin: 0;\r\n}\r\n/* 选定文档中所有元素 */\r\n```\r\n2. 类型选择器(Type Selector)\r\n\r\n```css\r\nh1, h2, h3{\r\n	font-family: Arial;\r\n	color: blue;\r\n}\r\n/* 选定特定的标签,HTML的元素标签 */   \r\n```\r\n3. 类选择器(Class Selector)   \r\n\r\n```css\r\n.notify{\r\n	background-color: red;\r\n}\r\np .notify{\r\n	font-size: 20px;\r\n}\r\n第一个选定包含class属性值为notify的元素    \r\n第二个指定了标签是<p>，class属性值是notify     \r\n```\r\n4. id选择器(id selector)   \r\n\r\n```css\r\n#infor{\r\n	padding: 20px 20px 10px 5px;\r\n}\r\n匹配特定id属性等于infor的元素\r\n```\r\n5. 子元素选择器(Child Selector)    \r\n\r\n```css\r\nli > a:hover{\r\n	text-decoration: underline;\r\n}\r\n所选的元素是前面元素的孩子，即处于前面标签中。   \r\n```\r\n6. 后代元素选择器(Descendant Selector)    \r\n\r\n```css\r\np a {\r\n	text-decaration: underline;\r\n}\r\n匹配所有属于p元素后代的a元素， p和a之间使用空格隔开，注意a可以不是p的孩子    \r\n```\r\n7. 多元素选择器(Multiple Selector)    \r\n\r\n```css\r\n.para, .infor{\r\nbackground-color: silver;\r\ncolor: white;\r\npadding: 20px;\r\nfont-family: Arial, Verdana, sans-serif;\r\n}\r\n同时匹配para 和 infor元素， 两个元素间使用逗号隔开。    \r\n```\r\n8. 直接相邻元素(Adjacent Sibling Selector)    \r\n\r\n```css\r\nul+li{\r\n	color: red;\r\n}\r\n匹配无序列表ul中的第一个li元素， 不管其他.    \r\n```\r\n9. 泛相邻元素(General Sibline Selector)    \r\n\r\n```css\r\nh1~p{\r\n	color: blue;\r\n}\r\n所有和h1相邻的p标签， 互为相邻元素.   \r\n```\r\n10. 伪类选择器(Pseudo-classes selectors)   \r\n\r\n```css\r\n基本格式： \r\nselector:pseudo-class{\r\n	property: value;\r\n}\r\n例子：\r\na:hover{\r\n	text-decoration: underline;\r\n}\r\nCSS伪类是加在选择器后面的用来指定元素状态的关键字.   \r\n伪类列表      \r\n	* link    \r\n	* visited\r\n	* active\r\n	* hover\r\n	* focus\r\n	* first-child\r\n	* nth-child\r\n	* nth-last-child\r\n	* nth-of-type\r\n	* first-of-type\r\n	* last-of-type\r\n	* empty\r\n	* target\r\n	* checked\r\n	* enabled\r\n	* disabled\r\n```\r\n11. 更多的规则看下图：    \r\n![selector](http://7xo4sa.com1.z0.glb.clouddn.com/rules.png)    \r\n','CSS基础， 样式的优先级和选择器。','2016-03-03 13:55:51','shady','PL',0,0,'cssji-chu-er',12,''),(11,'Ubuntu日常使用skills','####如何关闭Ubuntu的客人会话(guest session)\r\n使用默认的LightDM，修改/etc/lightdm/lightdm.conf文件   \r\n对于Ubuntu13.10 to 14.10,修改/etc/lightdm/lightdm.conf.d/50-unity-greeter.conf   \r\n对于Ubuntu 14.10或更高版本,修改/usr/share/lightdm/lightdm.conf.d/50-unity-greeter.conf   \r\n将下面的内容覆盖原先文件内容重启即可.   \r\n\r\n```python\r\n[SeatDefaults]\r\ngreeter-session=unity-greeter\r\nuser-session=ubuntu\r\nallow-guest=false\r\n```\r\n\r\n####如何修改Linux主机名(hostname)\r\n  使用$ hostname 查看当前主机名，使用 #hostname newHostName 进行修改，注意采用这个命令会立即起效(在重启Terminal后起效)， 不过下次系统重启后， 主机名会恢复为原先的名字。这是因为开机时， 系统会再次读取相关的配置文件，而覆盖掉之前的修改。 下面介绍如何永久性修改主机名， 不同版本的Linux需要修改不同的配置文件\r\n\r\n1. 根据不同Linux发行版修改相关的配置文件\r\n  * Redhat / CentOS / Fedora\r\n  	修改/etc/sysconfig/network 文件， 替换新的主机名\r\n  *  Debian / Ubuntu\r\n	在Debian系统中，服务器的主机名存储在/etc/hostname文件中，则修改/etc/hostname \r\n2.	修改/etc/hosts 里面的主机名\r\n3. 	重启系统 sudo reboot， 使用 $ hostname 命令可以看见主机名成功修改\r\n\r\n#### 如何在不同Server间传递文件\r\n1. 使用scp(secure copy)命令\r\n	scp -P port /path/to/file username@ipAddress:/path/to/store\r\n	例如： A机器(121.131.121.1)要将文件one.py传递到B机器(123.121.2.23)的/home/userB目录上，B机器的ssh端口为2016(默认是22)， 则使用下面的命令：\r\n\r\n	```python\r\n	scp -P 2016 ./one.py username@123.121.2.23:/home/userB \r\n\r\n	-P 选项是指定对方开启ssh服务的端口号\r\n	-r 则是可以传输文件夹, 指recursive\r\n	```\r\n2. 使用sz、sc命令\r\n	有时候在window下开发， 要将文件上传到server上面， 可以使用sz、sc指令。\r\n	首先是安装(Ubuntu):    \r\n	sudo apt-get install lrzsz    \r\n	也可以选择下载压缩包， 通过make进行安装    \r\n	当要上传文件时， 使用sc 则会弹出窗口让你选择上传的文件\r\n	使用sz filename 则会让你选择本地目录进行保存。\r\n	使用时需要支持sz/rz命令的终端软件。\r\n\r\n#### 修改软件更新源   \r\n1. 修改Kali Linux的软件更新源：(这里使用阿里云的Kali源)\r\n使用编辑器修改源配置文件 /etc/apt/sources.list\r\n\r\n```python\r\n1. 修改配置文件： vi /etc/apt/sources.list\r\n把原先的官方源注释掉， 并标上修改时间注释\r\n2. 添加下面的源连接\r\ndeb http://mirrors.aliyun.com/kali kali main non-free contrib\r\ndeb-src http://mirrors.aliyun.com/kali kali main non-free contrib\r\ndeb http://mirrors.aliyun.com/kali-security kali/updates main contrib non-free\r\n3. 更新软件包(repository)\r\n$ sudo apt-get update\r\n$sudo apt-get dist-upgrade\r\n```\r\n####为Ubuntu添加搜狗输入法支持\r\n####Reference\r\n[Disable Ubuntu Guest Session](http://askubuntu.com/questions/62564/how-do-i-disable-the-guest-session)','Ubuntu日常使用hack记录, 免得每次Google','2016-03-03 14:05:52','shady','PL',0,0,'ubunturi-chang-shi-yong-skills',1,''),(12,'MySQL使用日常','###mysql数据备份    \r\n首先是文件命名的小技巧：       \r\n  Linux下使用date命令获取当前日期作为文件名   \r\n\r\n```python\r\n    Example:    \r\n    $ touch `date +\"%Y-%m-%d\"`.Backup.sql\r\n    # date后面跟着的是格式符  \r\n    # %Y 表示4位的年份   \r\n    # %m (月份0..12)   \r\n    # %d (日0..31)\r\n    # %H (小时0..23)\r\n```\r\n具体可以看这里的链接[ClickMe][link]    \r\n注意这里的`符号不是单引号,而是和ESC一起的符号    \r\n同时在date后面的+号要有一个空格   \r\n      \r\n####数据库冷备份  \r\n数据库冷备份就是直接对数据库数据文件进行备份,保证数据库能够恢复到特定的时间点。    \r\n1. 找到数据库数据文件位置  \r\n   在mysql中使用下面指令：show variables like \'%dir%\'     \r\n   定位到datadir就是系统中数据库数据文件位置。     \r\n   linux下通常是/var/lib/mysql     \r\n2.  为了保证数据的一致性, 防止备份时有其它用户在操作数据库， 需要先关闭数据库服务器    \r\n   在linux(Ubuntu)下使用下面指令关闭:  sudo stop mysql    \r\n3. 采用压缩工具对数据文件进行复制压缩    \r\n\r\n    tar -zcf /tmp/`date +\"%Y.%m.%d.%H.%M\"`.MySQL_Backup.tgz /var/lib/mysql\r\n\r\n  上面的指令将mysql文件夹进行打包压缩， 存放到/tmp目录下(命名规则看上面)\r\n\r\n4.  恢复数据时只要将压缩文件解压并放回原先目录即可 \r\n   重新开启数据库服务器\r\n   sudo start mysql\r\n 总结： 由于备份时需要关闭数据库服务器，并且只能完整备份， 所以不是很实用。 \r\n\r\n####利用mysqlhotcopy进行复制   \r\n条件： 数据库中的表格式应该是MyISAM格式(Engine)     \r\n1. 复制的格式是binary format也就是数据库数据文件(类似冷备份,不过无需关闭数据库服务器,mysqlhotcopy会先将tables锁住,阻止其它用户对其操作， 保证数据的一致性，然后flush table将数据修改保存到数据库数据文件,然后进行文件复制,完成备份 )   \r\n\r\n```python\r\n    mysqlhotcopy --user=root --password=the_mysql_root_password music /home/user/Documents\r\n    Locked 4 tables in 0 seconds.\r\n    Flushed tables (`music`.`album`, `music`.`artist`, `music`.`played`, `music`.`track`)\r\n    in 0 seconds.\r\n    Copying 13 files...\r\n    Copying indices for 0 files...\r\n    Unlocked tables.\r\n    mysqlhotcopy copied 4 tables (13 files) in 1 second (1 seconds overall).\r\n```\r\n用户名和密码， 后面指定要备份的数据库,和备份数据文件存放的路径,同样， 有很多参数选项可以添加， 进行设置。    \r\n2. 恢复时， 先关闭数据库服务器，将文件复制到数据库数据目录/var/lib/mysql 开启数据库服务器  \r\n\r\n####利用mysqldump进行备份   \r\n  mysqldump所产生的备份文件是sql语句， 可用来重新构建数据库的sql文件.由于文件里面存储的是文本格式， 所以可以实现高度压缩，同时允许指定备份的粒度,无需完整备份.    \r\n mysqldump可以有很多参数设置(options),让你高度自由控制备份的方式，使用mysqldump时有默认的参数设置， 基本上能满足大部分情况.(in most case)下面通过几个例子来看如何使用mysqldump    \r\n \r\n1. 备份服务器上所有数据库      \r\n\r\n```python\r\n  mysqldump --user=root --password=password \\\r\n  --result-file=music.sql music    \r\n    上面的--result-file 选项用于指定目标文件的路径和文件名       \r\n    也可以使用linux的管道机制，忽略--result-file option     \r\n    mysqldump --user=root --password=password \\\r\n    --all-databases > file.sql\r\n```\r\n2. 备份指定数据库(使用--datbases选项)\r\n\r\n```python\r\n   mysqldump --user=root --password=password \\\r\n   --result-file=outputfile.sql --databases database_name\r\n  备份多个指定数据库时， 可以直接在后面添加多个数据库名，当然生成数据库的sql语句文件会在同一个文件中      \r\n```\r\n\r\n3. 备份指定的某个数据库table(直接指定数据库明后面跟上表名)   \r\n  mysqldump --user=root --password=password \\\r\n  --result-file=outputfile.sql database_name table_name    \r\n\r\n4. 备份特定的数据    \r\n\r\n```python \r\n  mysqldump --user=root --password=password \\\r\n  --result-file=outputfile.sql database_name table_name where=artistname like \"%Moroh%\"\r\n   使用where语句对数据库的数据进行选择   \r\n```\r\n5. 如何恢复数据\r\n  * 在mysql中使用source语句   \r\n  source 文件路径+文件名   \r\n  source /tmp/file.sql   \r\n  * 在shell下使用文件   \r\n  $ mysql --user=root --password=password < file.sql   \r\n  建议使用source方法,可以看见sql语句执行过程,比如出现错误或在警告   \r\n  同时可能sql文件中没有create database语句 或者没有use语句, 在mysql中使用source可以事先指定好数据库。    \r\n\r\n通常情况下，   \r\n1. 备份服务器上的所有文件    \r\n2. 指定备份的数据库\r\n\r\n#### 常见的MySQL内置函数    \r\nselect database()  \r\nselect current\\_time()  \r\nselect current\\_date()    \r\nselect version()    \r\nselect now()  日期时间    \r\nselect user()\r\n\r\n#### 如何导入外部SQL文件\r\n1.在MySQL里面 使用语句source,后面指定文件名(绝对路径或相对路径)    \r\n    mysql> source /home/user/full/path/name.sql \r\n     \r\n2.未登录MySQL， 在shell下直接导入     \r\n   shell\\_prompt$ mysql databasename \\< /home/user/full/path/name    \r\n   这里记得提供登录mysql的相关参数，例如：     \r\n   shell\\_prompt$ mysql -u username -p database     \r\n   -u 指定后面跟的是 user 用户名     \r\n   -p 指定要输入密码 password    \r\n   -h 指定连接的服务器 host     \r\n\r\n   这里分享一个小技巧， 通过将mysql的参数写入 /etc/mysql/my.conf这样练习时就不同用重复输入参数,当然这样做会有安全性问题, 下面是我的配置文件.    \r\n\r\n```python\r\n   [mysql]\r\n   #auto-complete自动补全命令\r\n   auto-rehash\r\n  #防止误删文件   采用安全更性\r\n   safe_updates\r\n   user=shady\r\n   password=yougotme\r\n   #当输出超过屏幕，自动采用vertical输出\r\n   auto-vertical-output\r\n```\r\n3.利用shell的管道功能   \r\n  shell\\_prompt$ cat filename.sql | mysql databasename\r\n\r\n#### 从MySQL导出数据   \r\n1.导出HTML格式   \r\n\r\n```python\r\n$ mysql -H -e \'select * from mysql.user\' > outputfile.html    \r\n-H 表示 htnl格式输出   \r\n-e 表示执行 无需进入mysql客户端中 直接在shell上调用    \r\n\\> 是Linux的重定向符,表示结果保存到指定文件中  \r\n当不需要输出表头时， 可以加入参数  \r\n--skip-column-names  不会将表格表头输出   \r\n-N 和前面的参数同一个功能    \r\n```\r\n2.导出XML格式    \r\n$ mysql -X -e \'select user, host, password from mysql.user\' > file.xml        \r\n-X 表示输出格式为XML  \r\n\r\n3.采用Linux数据处理工具,得到合适的输出格式  \r\nLinux下有 tr、sed 等工具可以使用    \r\n\r\n```python\r\n% mysql databasename < inputfile | tr \"\\011\" \":\" > output\\_file    \r\n上面的命令 从inputfile读入指令， 后通过Linux的文件流, 采用tr工具将原先的Tab制表符替换为\":\" 后输出到output\\_file中   \r\n```\r\n[link]: http://www.cyberciti.biz/tips/shell-scripting-creating-reportlog-file-names-with-date-in-filename.html\r\n','利用mysqldump进行备份， 及如何导出数据','2016-03-03 14:13:16','shady','PL',0,0,'mysqlshi-yong-ri-chang',6,''),(13,'MySQL 基础','####MySQL 安装（Ubuntu）\r\n\r\n```python\r\n  $sudo apt-get install mysql-client mysql-server </pre>\r\n  安装期间设置root密码，也可以直接按Enter跳过。MYSQL最高权限用户名为： root 最高权限数据库：mysql  \r\n```\r\n\r\n####进入MYSQL shell client\r\n(对于shell的命令记录功能， mysql也可以使用， 所有可以通过 上下箭头恢复之前的命令)      \r\n$mysql -p -u root    \r\n输入密码 则会弹出 mysql> 提示。（这里指的是在terminal shell的提示）   \r\n-u表示username  username紧跟-u选项   -p 表示输入passwd    \r\n\r\nI. **如何创建一个无密码用户**    \r\n 进入root     \r\n  $mysql -p -u root    \r\n  $mysql> show databases;     \r\n\r\nII. **创建一个数据库test** \r\n\r\n```python    \r\n  格式： create database databasename;    \r\n  mysql> create database test;   \r\n  mysql> show databases;       \r\n  //查看创建是否成功 注意s 以及最后语句的分号， 默认所有mysql以“；”   \r\n  //表示语句结束          \r\n  use mysql;   \r\n  //选定使用mysql数据库，mysql为系统自带      \r\n  mysql> select user, host, password from mysql.user;      \r\n  //查看当前数据库所有用户。     \r\n  mysql> create user eric@localhost;   \r\n  //创建一个新local用户， username为你创建用户名   \r\n  mysql> select user, host, password from mysql.user;      \r\n  //查看是否创建成功     \r\n\r\n  mysql> select user, host from mysql.db;      \r\n  //不会出现前面刚创建的用户名     \r\n  //mysql.db是用来储存数据库中关于GRANTS的信息.   \r\n  //也就是说如果你对新的user使用了grant语句,则该user会出现    \r\n  //在mysql.db   \r\n\r\n关于上面的mysql.db问题:[StackOverflow][link];   \r\n  mysql> grant all on test.\\* to _username_@localhost;      \r\n  //把前面新建的数据库的所有权限赋给username     \r\n  mysql> select user, host from mysql.db;      \r\n  //出现前面创建的username    \r\n	\r\n  mysql> select current_user();   \r\n  //忘记自己是谁。。。使用上面语句查看   \r\n  mysql> select current_user;   \r\n  //使用系统变量， 为了和其它DBMS一致， 部分系统变量无需添加@@   \r\n  //没有google到如何不退出mysql切换用户   \r\n\r\n  测试创建的用户是否成功。     \r\n  $mysql -u username   \r\n  //这里没有-p选项因为前面创建的是没有密码的用户  \r\n``` \r\nIII.  **创建删除一个有密码用户**  \r\n\r\n```python    \r\n  mysql> create user \'username\'@\'localhost\' identified by \'password\';     \r\n  //同样可以使用上面的语句对创建状态进行查看， 和赋予相应数据库的权限。   \r\n\r\n  mysql> drop user \'username\'@\'localhost\';    \r\n  //删除创建的用户     \r\n  为没密码的用户设置密码或则重置密码       \r\n  SET PASSWORD FOR \'eirc\'@\'localhost\' = PASSWORD(\'mypass\');   \r\n  注意密码部分应该使用单引号，或双引号     \r\n    \r\n  PASSWORD() 是MySQL的一个函数， 将输入的字符串转换为hash串       \r\n  可以使用下面语句测试使用：    \r\n        select password(\"password\");        \r\n\r\n  为当前用户重置密码     \r\n  set password=password(\"newpassword\");   \r\n```\r\nIV.  **数据库授权**  \r\n  (1). 创建一个超级权限用户。 \r\n\r\n```python     \r\n  $mysql -p -u root    \r\n  //进入root用户  \r\n\r\n  mysql> grant all on *.* to \'username\'@\'localhost\';  \r\n  mysql> grant grant option to \'username\'@\'localhost\' \r\n  //把所有数据库的所有权限赋予给用户username；     \r\n    \r\n  (2). 创建一个较小权限用户      \r\n  mysql> grant select on somedb.\\* to restrited@localhost;   \r\n  //把查看(select)某一数据库(somedb)的权限赋予restrited用户 \r\n```\r\nV. **如何删除某一用户**    \r\n\r\n```python\r\n  删除用户\'eric\'@\'localhost\'   \r\n  1. drop user \'eric\'@\'localhost\';        \r\n  2. delete from mysql.user where user = \'eric\' and host = \'localhost\';     \r\n    flush privileges(告诉server所做的修改)\r\n    使用第二种方法需要对mysql数据库有操作权限.    \r\n```\r\n\r\nVI. **如何修改表名**    \r\n\r\n```python\r\n RENAME TABLE tab_name TO new_tab_name\r\n  [,tb1_name TO new_tab1_name2,]...\r\n  //将player 改为 Player\r\n  mysql RENAME TABLE player TO Player;\r\n``` \r\nVII. **update过程出现的问题**   \r\n  如果使用update语句，或其delete语句， 如果在where条件中没有使用到对应的primary key的相关条件.   \r\n则会出现报错，错误信息： You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column。      \r\n	解决这问题的办法是修改sql_safe_update的模式,默认设置为1，可通过以下指令修改为0.\r\n	set sql\\_safe\\_update = 0;      \r\n再次修改则不会出现错误， 这里只是修改了session的变量。       \r\n\r\n事实上使用safe-update 模式比较保险,能够避免误删数据库数据.   \r\n在CLI下默认mysql 的safwe-updates 是关闭的， 如何设置打开呢。       \r\n\r\n```python\r\n1. 找到系统中的mysql configuration配置文件          \r\n  在Ubuntu下, 通常是/etc/mysql/my.cof       \r\n2. 使用su - 获取管理员权限    \r\n3. 增加一个全局变量,自动打开safe-updates     \r\n    [mysql]    \r\n    safe-updates   \r\n```\r\n有时候在命令行下执行query返回的结果不只整个屏幕。\r\n为了方便查看， 可以引入pager 对查询结果进行分页显示 \r\n可以使用下面命令设置： \r\n\r\n```python     \r\n   当前session： pager less      \r\n   你也可以选择使用more      \r\n设置为默认    \r\n    打开my.cof mysql配置文件    \r\n    加入下面语句   \r\n       [client]    \r\n       pager less\r\n```\r\n\r\n###如何复制一张表(copy a table)    \r\n\r\n####方法一：\r\n\r\n```python     \r\n    1. 第一步复制它的结构到一张新表  \r\n    > mysql> create table NewTableName like TargetTable;   \r\n    //创建一张和被复制表相同结构的新表    \r\n    > mysql> describe NewTableName  \r\n     //查看创建的新表状态    \r\n    \r\n    2. 第二步 复制目标表的数据到创建的新表    \r\n    > mysql> insert into NewTableName select * from TargetTable;   \r\n    //把每一项数据插入到新表中    \r\n\r\n    这种复制方法能够同步复制原表格的index, foreign key.     \r\n```\r\n    \r\n####实例：\r\n\r\n```python \r\n    1. 查看表的结构（Structure）\r\n    mysql> describe countries;\r\n    +--------------+---------------+------+-----+---------+-------+\r\n    | Field        | Type          | Null | Key | Default | Extra |\r\n    +--------------+---------------+------+-----+---------+-------+\r\n    | country_id   | varchar(2)    | YES  |     | NULL    |       |\r\n    | country_name | varchar(40)   | YES  |     | NULL    |       |\r\n    | region_id    | decimal(10,0) | YES  |     | NULL    |       |\r\n    +--------------+---------------+------+-----+---------+-------+\r\n\r\n\r\n    2. 查看表的内容（Data）      \r\n    mysql> select * from countries;  \r\n    +------------+-------------------+-----------+      \r\n    | country_id | country_name      | region_id |  \r\n    +------------+-------------------+-----------+  \r\n    | CN         | China             |       897 |  \r\n    | US         | The United States |       899 |  \r\n    | UN         | The United Kindom |       799 |  \r\n    +------------+-------------------+-----------+  \r\n    \r\n    3. 创建相同的结构的新表并查看其结构。 \r\n     \r\n    mysql> create table copy like countries;\r\n    Query OK, 0 rows affected (0.10 sec)\r\n\r\n    mysql> describe copy;\r\n    +--------------+---------------+------+-----+---------+-------+\r\n    | Field        | Type          | Null | Key | Default | Extra |\r\n    +--------------+---------------+------+-----+---------+-------+\r\n    | country_id   | varchar(2)    | YES  |     | NULL    |       |\r\n    | country_name | varchar(40)   | YES  |     | NULL    |       |\r\n    | region_id    | decimal(10,0) | YES  |     | NULL    |       |\r\n    +--------------+---------------+------+-----+---------+-------+\r\n    \r\n    4. 复制数据(Data)并查看结果。  \r\n    \r\n    mysql> insert into copy select * from countries;\r\n    Query OK, 3 rows affected (0.00 sec)\r\n    Records: 3  Duplicates: 0  Warnings: 0\r\n\r\n    mysql> select * from copy;\r\n    +------------+-------------------+-----------+\r\n    | country_id | country_name      | region_id |\r\n    +------------+-------------------+-----------+\r\n    | CN         | China             |       897 |\r\n    | US         | The United States |       899 |\r\n    | UN         | The United Kindom |       799 |\r\n    +------------+-------------------+-----------+\r\n```\r\n\r\n####方法二：  \r\n\r\n```python\r\n    CREATE TABLE IF NOT EXISTS copy    \r\n    AS SELECT * FROM countries;  \r\n    \r\n    实例：省略。  \r\n```\r\n\r\n#### delimiter在mysql中的作用     \r\n\r\n在MYSQL中， 默认是以\";\"表示命令结束， 也就是说指令加上\";\"回车后，就会被执行。 那么假设我们要输入的语句包含\";\"怎么办呢， 这时我们就需要delimiter来重新定义另外的符号来决定命令的结束。\r\n\r\n格式就是:\r\n\r\n```python  \r\nmysql delimiter symbol(can be any symbol)  \r\n下面给出一个例子：  \r\n    mysql> delimiter $$   //选用命令中不会出现的符号       \r\n    mysql> CREATE TRIGGER insert_triger  \r\n    -> BEFORE INSERT ON Teacher  //Teacher表  \r\n    -> FOR EACH ROW  \r\n    -> AS BEGIN  \r\n    ->    IF(new.salary<2000)THEN  \r\n    ->       set new.salary := 0; //如果没有通过delimiter改变符号， 这时命令就会结束  \r\n    ->    END IF;  \r\n    ->  END;  \r\n    -> $$  //此时按下回车则会结束命令输入   \r\n    -> delimiter ; //修改为默认值 即分号 \';\'  \r\n``` \r\n\r\n#### 如何在MYSQL中check功能的替代    \r\nThe [MySQL Reference Manual](http://dev.mysql.com/doc/refman/5.1/en/create-table.html) says:    \r\nThe CHECK clause is parsed but ignored by all storage engines.  \r\n也就是说MYSQL中没有实现check的功能。 那么有什么可以实现替代的方法呢。  \r\n####使用触发器(trigger)进行替代   \r\n\r\n```python\r\n    ->mysql delimiter %%\r\n    -> mysql create trigger insert_salary  \r\n    -> before insert on jobs  //当对表jobs进行插入之前， 进行检查  \r\n    -> for each row  \r\n    -> begin \r\n    ->    if new.max_salary > 25000 then    //条件是max_salary < 25000,\r\n              //如不满足\r\n    ->            set new.max_salary := 0;  //修改max_salary 的值为0\r\n    ->    end if; \r\n    -> end;\r\n    -> %%  //按下回车， 结束命令  \r\n```\r\n[link]: http://dba.stackexchange.com/questions/13327/what-is-the-mysql-db-table-used-for?newreg=e93781589e2141dbb03c821cd5055d6f#comment20172_13327\r\n','数据库基本设置， 安装， 账户密码设置， 以及如何进行数据表复制。','2016-03-03 14:20:43','shady','PL',0,0,'mysql-ji-chu',6,''),(14,'Middle Class in China','Abstracts: With the inspiration of American dream, the middle class of America came into existence, played an essential role in many aspects of American society, including economy, politics, education, etc., which is still shaping or even changing the progress of America. Meanwhile, the number of middle class in China is expanding explosively due to the rapid development of economy.  \r\n However, we tend to associate the middle class with the phrases of, ‘great wealth, purchasing power, lifestyle,’ etc. But the meaning of middle class are far more than that. This thesis analyse the middle class in China and America, to provide us some experience and help us gain some insights, to better develop the middle class in China.      \r\n\r\nThrough comparison, we connect the middle class with democratization and social stabilization. For future prosper of our society, we need to build a strong middle class, those who are willing to take on social responsibilities and get involved with government decision-making process.   \r\n\r\n> Key Words： Middle class, Social Stabilizer, Democratization\r\n\r\n#### Introduction  \r\n In recent decades, due to the bonus of population, China embrace its economic boom. Millions of middle class emerged in line with the rapid economic growth. But we seem to have little understanding of middle class, or even misread. However, the middle class of America had come into existence since the Industrial Revolution. This provides us a vivid sample to analyse the role of middle class. This thesis is designed to analyse the development and influence of middle class in America, compared with the middle class in China, to provide us an opportunity to gain some insights about the middle class.\r\n\r\n####A driven force for economic growth\r\nBy definition, middle class are a class of people in the middle hierarchy of society. [1] However, a simple standard for measuring is that a household with a third of its income for discretionary spending is considered middle class. Although there are other factors such as tertiary education, wealth, occupations. From the standard above, we can draw a conclusion that middle class are a group of people who possess a certain amount of capital and also with a secure income. Actually, we are familiar with consumerism in America, a great driven force for American economy, which is a reflection of economic clout mostly generated by the middle class. However, in China, we traditionally rely on massive investment on infrastructure construction and export-oriented business to develop our economy. And with the decay of population bonus and the globalization, cheap labor and resources-oriented industries are no more our advantage in the global competition. Fortunately, the emerging middle class may provide us a way out, to get rid of such a development mode and to fuel our economy again. Due to their consumption and needs for a service sectors, the middle class can play an important role in the transition to a domestic demand-driven society. And that is what is happening in China right now, our government is placing more emphasis on its domestic market, with a range of methods applied to increase consumption and boost the economy.  With its potential purchasing power, middle class may be a great driven force to our economic growth, what is more important, it is a way of sustainable development. \r\n\r\n\r\n#### Middle class are social stabilizer.\r\n  Ancient Greek philosopher, Aristotle, once said, a city ought to be composed, as far as possible, of equals and similar, and these are generally the middle classes. Wherefore the city which is composed of middle-class citizens is necessarily best constituted in respect of the elements of which we say the fabric of the state naturally consists. [2] The reason why the middle class are more stable than any other classes is that they don’t hold hostility toward the rich like the poor, don’t have enough wealth to be coveted like the rich, and they seldom plot against each other. Once when I was surfing the Internet, I found an interesting topic posted on Quora, a Q&A site, which is entitled as: What is the ugliest facts in the world?  And the answer which ranked first is ‘The poor walk a thousand miles to get the food, while the rich walk a thousand miles to digest it.’ Actually, it reflects an enormous gap between the rich and the poor. It is reported that the poorest 40 percent of the world’s population accounts for 5 percent of global income. The richest 20 percent accounts for three-quarters of world income. [3] While in highly unequal society, the gap between the rich and the poor will get wider and wider, which means the social conflicts may increase in line with that. And eventually, the poor may use violence to redistribute, and the rich may use the repression to prevent such a thing happen, and that may bring more uncertainty to the stabilization of the society. However, a relatively large and affluent middle class may acts as a buffer between the rich and the poor, and limit the redistribution. They are easier to dissuade from revolution since they don’t wanna the redistribution happen. Meanwhile, they may act as middle-dissident to change the policy toward the poor, which adjust the situation of the poor. What is more, since they are relatively closed to the poor, the poor may be influenced by their opinions. Therefore，besides the reason the middle class may boost the economy, being a social stabilizer may be another reason why our government is keen to expand the middle class for the harmony society.\r\n\r\n####The middle class and the democratization\r\n  Based on the history of democratization in America, the expansion of a society’s middle class has been recognized as a key factor in terms of promoting democratization. To further illustrate this topic, we need to know why the middle class are so influential. Firstly, it is about the professional middle class, one is that journalists, writers, professors, commentators, political scientist, who are essential in shaping the public opinion, are almost exclusively members of the professional middle class. Secondly, some of them may hold an occupation which includes managerial duties, meaning they spend their work-time directing others. And hopefully, with a certain amount of wealth, social status, and enhancing awareness of individual rights, they may get involved with politics, demand a political reform to facilitate the democratization, act as social agent of political change, speed up the process of democratization by exerting pressure on the state. However, it seems the middle class in China show the tendency of distancing away from political. [4] Due to the insecure feeling towards the institution and the lack of social welfare, the middle class are more concern about their material interests rather than political. But still I believe parts of the middle class may promote democratization in terms of enhancing collective rights to voice out and challenge the state. And also, to better develop the middle class to sustain the economy and social stabilization, measures will be taken by the government to meet the benefits of this class. Otherwise, there are another ways out like immigration. And, hopefully, the middle class can play an active role in the process of democratization in China, instead of a middle class without democracy.\r\n\r\n####Conclusion\r\nMiddle class, with its potential economic power and political power, are now influencing the world. To have a better understanding of this class gives us an opportunity to better develop it and make the best use of it. We connect the social stabilization and democratization with the middle class in this thesis, analyzing its great influence and potential power. For future sustainable development of our society, we need to build a strong middle class, those who are willing to take on social responsibilities and get involved with government decision-making process. \r\n\r\n\r\n[1].From Wikipedia. Following linkage: [http://en.wikipedia.org/wiki/Middle_class][link]   \r\n[2]. From Benjamin Jowett\'s 1885 translation of Aristotle\'s \"Politics\".   \r\n[3].From article ’Poverty Facts and Stats’ on the Internet. The following linkage:  [http://www.globalissues.org/article/26/poverty-facts-and-stats][link2]   \r\n[4]. Jie Chen. A Middle Class without Democracy. Oxford University Press. April 2013.   \r\n[link]: http://en.wikipedia.org/wiki/Middle_class   \r\n[link2]: http://www.globalissues.org/article/26/poverty-facts-and-stats   \r\n','Middle class in China is expanding explosively due to the rapid development of economy, then what about them, and why should we care?','2016-03-03 14:40:21','shady','PL',0,0,'middle-class-in-china',4,''),(15,'写在外卖大卖时','有没有这种经历， 背着书包到图书馆， 想认真看会书。 不一会， 外面狂风大作， 电闪雷鸣， 你开始走神。 突然， 有一个idea 出现在你的脑海， 挥之不去(Sometimes, the idea resides in your head.)。好吧， 感觉有点无所事事， 遂写下下面文章。\r\n				\r\n> 前记： 世界上最遥远的距离， 是我叫你去饭堂吃饭， 你却早已点了外卖。\r\n\r\n随着美团， 饿了么 的互掐， 相互抢占市场份额， 外卖走进我们的生活。易观智库发布了《中国互联网餐饮外卖市场专题研究报告2015》。报告显示，2014年中国互联网餐饮外卖市场交易规模持续攀升，已突破150亿元，订单规模达到3.7亿单。易观智库预测，未来餐饮外卖将是万亿以上规模的市场. 听说有师兄专门就在外面搞外卖创业，是不是说是师兄外卖生意会好做点…      \r\n 外卖平台当前面对的众多问题有…， 其中个人体验最深切的就是超时配送问题， 如果你在11：00 点的外卖， 到1点才听到， 你的外卖到了， 相信你心中肯定会有诸多不满。      \r\n\r\n  现有的外卖配送模式基本上都是店家自己通过招收外卖配送兼职， 通常是高校学生兼职， 然后分散配送。 这样的模式，是传统的外卖模式， 然而对于外卖集中型的区域(比如高校)存在如下的缺点：      \r\n\r\n 1. 单家店订单的分散特点， 导致配送效率低下，出现一趟一单现象      \r\n 2. 兼职人员的出勤情况， 由于配送员是兼职人员， 可能导致配送的不稳定性      \r\n 3. 订单量的不稳定性  可能由于订单量突然大量增加， 配送环节跟不上， 减少销量。者由于订单太少， 降低配送员积极性。       \r\n  可见， 分散配送的后果是， 配送环节的不稳定性和低效率性， 大大提高了超时配送的风险， 影响用户体验度， 对外卖平台带来负面影响。   \r\n\r\n  下面介绍一个模型, 通过对该模型的学习和研究， 可以为外卖配送提供一种新的解决方案:    \r\n  在计算机中， 为了能暂存从终端键入的字符， 以降低中断处理机的频率(提高计算机CPU的利用率)， 在终端处理程序中， 须具有字符缓冲的功能。    \r\n\r\n1. 专用缓冲方式     \r\n  系统为每个终端配置一个缓存区， 暂存用户键入的一批字符。 每个缓存区的大小固定， 当没有字符键入时， 则会空闲， 有大量字符键入时， 则需要等待处理。 缺点是缓存池利用率低， 优点是简化终端处理程序。    \r\n2. 公用缓冲方式    \r\n  系统只设置一个由多个缓冲区构成的公用缓冲池， 没有为每个终端设置专用的缓冲区。 当有数据进来时， 终端可以向缓冲池申请空缓冲区， 可以申请多个， 完成对所有数据的处理。 这样大大地提高了缓冲的利用率， 当然结构和管理上会有一些代价。    \r\n\r\n  如果你能大致了解上面的模型， 那么很自然地能想到外卖配送的另一个方案。 如果不理解， 看一下下面的说明也就懂了。      \r\n  提出的改善方案其实很简单， 通常都能想得到。 建立统一的配送平台， 通过中间机构， 店家将外卖配送外包出去， 店主负责准备好外卖，    把配送环节交给中间机构，按照配送的份数进行计费。中间机构负责招聘兼职配送员， 完成配送， 可以通过对订单的数据分析， 决定配送员的人数， 同时按照订单的目的地进行分类派送， 通过订单的差价获得利润空间。 下面分析这样的配送平台的好处：        \r\n	(这里的模型建立考虑的是高校外卖的情况)       \r\n\r\n1. 稳定性     \r\n  通过对历史订单数量的分析， 可以合理计划配送人员的数量， 最大优化人员效率。 同时， 解决分散配送中， 店家订单数量不稳定的问题， 局部不稳定， 但是区域订单总体上相对稳定。 通过选择合理的配送集中点(店家将配送的订单集中送到离学生宿舍近一点的地方)， 减少各种交通时间成本和人力代价 。 同时， 解决了分散配送兼职人员不稳定问题， 单一兼职员不出勤对整体的影响被平均化， 也就降低了。\r\n2. 高效性    \r\n  通过在配送点对区域所有卖家订单的分类， 可以进行按照特定区域配送(比如按楼配送)， 集中配送更加便捷快速， 减少配送员的时间成本， 也解决了部分商家不能提供送上楼的服务。\r\n3. 兼容性(可伸缩性)    \r\n  不管是美团外卖的订单， 还是饿了么的外卖订单 一律配送， 保证了该业务的可持续发展...\r\n\r\n系统分析：    \r\n  店家通过外卖配送外包， 可以少去自己招收兼职的麻烦， 以及配送员出勤问题的麻烦， 同时提高了订单的配送能力， 更有可能以更低的成本完成配送， 出现超时配送时， 可有中间机构承担责任。    \r\n  由于订单分类，配送员可以在更短的时间内配送更多数量的订单。  虽然单笔订单的酬金降低， 但是单位时间内的薪酬提高了， 收入也提高了。    \r\n  外卖平台：  配送环节的效率提高， 提高了用户的满意度， 提供了更优质的服务。    \r\n  中间机构：  我们的目的是实现双赢局面。。。改变模式， 解放生存力。    \r\n该模式实现双赢的效应， 同时是可发展的， 创造了更多的社会价值。    \r\n	\r\n  事实上， 这种东西很容易就可以想到， 至于为什么写出来呢， 因为如果太久没有写东西的话， 只会Ctrl-c, Ctrl-v。还有就是外卖是新兴市场， 市场不够成熟， 主要是传统的配送模式在外卖重灾区的不适用性， 有心改变的要趁早， Timing is everything.  当然了， 一切的idea都离不开执行力.\r\n	\r\n话说我为啥要写这东西：     \r\n   A. 无所事事呗     \r\n   B. 吐槽一下外卖慢    \r\n   C. 想下次早点吃到外卖    \r\n   D. 打雷了,赶紧装下B    \r\n','前记： 世界上最遥远的距离， 是我叫你去饭堂吃饭， 你却早已点了外卖。','2016-03-03 14:44:21','shady','PL',12,2,'xie-zai-wai-mai-da-mai-shi',4,''),(16,'VIM指令','Vim是由vi发展出来的文本编辑器, 是Vi IMproved缩写。 Vim有一个比较陡峭的学习曲线， 不过一旦掌握一些基本操作后， 能够大幅度提高编辑效率， 借用一些简单的指令组合， 能够实现复杂的需求，Vim的可扩展性赋予了它强大的生命力，这跟Linux文化息息相关。\r\n ![vim image](http://7xo4sa.com1.z0.glb.clouddn.com/Vimlogo.png \"Vim Logo image\")\r\n------\r\n   初级的Vim指令可以从网上找到很多学习资料，这篇博客大部分记录的是我新get的vim指令，意味着这不是介绍篇， 文章基本会覆盖如何添加插件(plugins)，以提高Vim的使用效率。如何快速在Vim上跳跃， 如何使用registers和Macros解决重复性问题等、、、在Linux使用Vim还是相对方便的。反正不断尝试,选择合适自己的工具.\r\n\r\n####快速跳转    \r\n   **注意一点， 下面的方法基本都可以在前面加上数字，来表示重复该操作   \r\n   例如 k意味着向上跳1行，5k意味着向上跳5行.**\r\n\r\n1. 使用 h 向左跳一个字符   j 向下跳一行   k 向上跳一行   l 向右跳一个字符， 类似使用方向键。  \r\n2. 使用w和b在单词间跳转  w意味着forward向前跳一个词   b意味着backward向后跳一个词   \r\n3. 使用$跳到当前行的行末，  0跳到当前行的开头，  ^跳到当前行的第一个字符。   \r\n4. 使用gg跳转到文件开头，  大写G跳到文件结尾，  numberG跳到指定的number行。 比如5G跳到第5行。     \r\n5. 段间跳跃， 使用{ 向上跳一段   } 向下跳一段.   5{表示向上跳5段。  \r\n6. 屏幕跳转 Ctrl-f 向前翻转一次屏幕 像PageDown。 Ctrl-b向后翻转一次屏幕PageUp   \r\n  * H 跳转到当前屏幕的第一行   \r\n  * L 跳转到当前屏幕的最后一行\r\n  * M 跳转到当前屏幕的中间\r\n7. 使用Macros进行标记跳跃  比如在某一点设置一个标记， 然后跳转回来.\r\n    在标记行 按m 进行标记mark， 然后选择register记下当前位置， 比如register a,\r\n    然后你可以到别处进行编辑， 当你想返回时， 按单引号和register的名字就能返回。\r\n 比如你在20行处， 按下 ma, 将当前行记录在Register a， 然后你在别处想跳回标记处， 按下\'a就能跳回。 接下来你能使用两个单引号\'\'在两个地方跳转。\r\n\r\n####Vim小技巧\r\n1. 如何调整当前行显示\r\n    * zt 将当前行置于屏幕顶部显示，t表示top\r\n    * zb 将当前行置于屏幕底部显示，b表示bottom\r\n    * zz 将当前行置于屏幕中间显示\r\n2. 如何使用register 和 Macros记录操作   \r\n    命名寄存器	a-z,A-Z	存放文本    \r\n    1. 按下q 然后选择一个命名寄存器， 比如a，显示开始记录Recording\r\n    2. 对当前行进行操作， 操作完后 按q退出记录\r\n    3. 使用@Register 来重复刚才的操作   \r\n举例说明：   \r\n假如你有下面文本(假设有几百行)\r\n\r\n```python\r\n<option value = \"BL\">Bonalie</option>   \r\n<option value = \"CN\">China</option>   \r\n<option value = \"UK\">United Kindom</option>   \r\n<option value = \"US\">United State</option>\r\n\\.\\.\\.\r\n```\r\n\r\n现在要你将里面的国家名提取出来,也就是删掉<.option value>等多余项手工一行一行删除可行性低~ \r\n\r\n```python\r\n现在采用上面的方法   \r\nqa 	  开始记录Macro\r\ndf>	  这条指令是从当前光标开始删除直到第一个<的出现.\r\nf<	  在这一行寻找下一个<, 将光标定位到<\r\nd$	  从< 字符开始删除直到这一行结束\r\nj0	  j跳到下一行， 0将光标置于行首 \r\nq	  结束Macro的记录\r\n@a 	  调用该Macro，可以看到对改行执行同样操作。\r\n到此， 你可以使用100@a 对余下的行进行相同操作。   \r\n```\r\n\r\n-----\r\n\r\n####安装插件\r\n1. 安装pathogen， 该插件用于管理其他插件\r\n2. 找到pathogen在github上的位置， 也可以直接下载\r\n3. 在本地的~/.vim 文件夹中建立两个文件夹， 分别命名为autoload bundle, bundle 用于存放其他插件分类   \r\n\r\n```python\r\nmkdir -p ~/.vim/autoload ~/.vim/bundle\r\n使用下面命令下载pathogen.vim到autoload文件夹\r\ncurl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim\r\n```\r\n4. Windows 可直接到github上下载pathogen.vim,置于Vim匹配文件夹中\r\n   url:  https://github.com/tpope/vim-pathogen    \r\n5. 修改 ~/.vimrc文件， 这是Vim的配置文件(configuration file)\r\n    添加下面语句 execute pathogen#infect()   \r\n6. 以后安装其他插件都放到bundle文件夹\r\n\r\n####安装NERDTree插件\r\n1. 直接到github上下载  找到DownloadZip下载， 解压放到bundle文件夹\r\n\r\n```python\r\n或则直接在bundle文件夹中使用\r\ngit clone https://github.com/scrooloose/nerdtree\r\n将该repository克隆到本地\r\n```\r\n\r\n2.设置如何打开NERNTree， 修改~/.vimrc 文件\r\n\r\n```python\r\n\" 设置NerdTree\r\nmap <F3> :NERDTreeMirror<CR>\r\nmap <F3> :NERDTreeToggle<CR>\r\n```\r\n  下面是效果图：\r\n    ![NERDTree image](http://7xo4sa.com1.z0.glb.clouddn.com/NerdTree.jpg \"NERTree image\")\r\n  基本使用参见google\r\n\r\n#### 防止vim的自动缩进：    \r\n  在进行粘贴时， 使用下面命令    \r\n  :set paste    \r\n  粘贴后使用, 恢复智能缩进。   \r\n  :set nopaste   \r\n  ',' Vim是由vi发展出来的文本编辑器, 是Vi IMproved缩写。 Vim有一个比较陡峭的学习曲线， 不过一旦掌握一些基本操作后， 能够大幅度提高编辑效率， 借用一些简单的指令组合， 能够实现复杂的需求，Vim的可扩展性赋予了它强大的生命力，这跟Linux文化息息相关。','2016-03-13 09:29:21','shady','PL',10,2,'vimzhi-ling',1,''),(17,'VIM指令(二)','Visual Mode可视化模式， 是Vim的一个工作模式， 本文章将演示如何在Visual mode下对文本进行编辑， 实现代码块缩进,对选定文本大小写转换， 对选定区域进行查找修改等功能。\r\n\r\n####如何进入Visual Mode\r\n1. Vim的常用模式\r\n	* 命令行模式(Command Line Mode)    \r\n	  打开Vim的默认模式\r\n	* 插入模式(Insert Mode)    \r\n	  进行文本编辑\r\n	* 可视模式(Visual Mode)    \r\n2. 可视模式下有三种选定模式， 被选定的文本会高亮显示。\r\n    * plain visual mode   \r\n	按v进入正常模式， 从光标开始处进行高亮，通过hjkl来控制选定范围。\r\n	通过按v 或则 ESC退出Visual mode\r\n    * block visual mode   \r\n	通过Ctrl-v进入块模式，可以通过hjkl或方向键选定某一块区域。\r\n    * linewise visual mode\r\n	通过Shift-v 进入行选择模式， 只能整行选择，通过jk进行选定。\r\n    * 事实上也可以通过鼠标选定区域   \r\n\r\n```python\r\n如果高亮文法部分不清晰， 可以通过下面设置修改，在 ~/.vimrc文件添加	 \r\nVisual  guifg=White guibg=LightBlue gui=none\r\n具体请见[Stack Overflow- Change the color of the selected code?][visual]\r\n[visual]: http://stackoverflow.com/questions/3074068/how-to-change-the-color-of-the-selected-code-vim-scheme\r\n```\r\n\r\n####如何实现代码块缩进\r\n   事实上， 在Visual Mode选定了区域后，就相当于只对当前选定的区域进行操作。 下面列举一些常用操作。\r\n\r\n```python\r\n	d 						删除选定的区域。\r\n	:s/target/replace/g 	对当前区域进行查找target并替换成replace\r\n	Shift~   				将选定区域的大写转换为小写， 同时将小转换为大写\r\n\r\n	实现代码缩进：\r\n	1. Shift-v进入行选择模式， 选定要缩进的代码块   \r\n	2. 使用>>向右缩进， <<向左缩进   \r\n	上面的方法缩进一次后会自动退出行模式， 如何实现连续缩进   \r\n	3. 修改~/.vimrc 文件， 添加下面的语句   \r\n		*	vnoremap < <gv      \r\n		*	vnoremap > >gv   \r\n	4.重复上面方法， 可以实现连续缩进。   \r\n```\r\n\r\n####实现代码块的注释\r\n\r\n```python\r\n	1. Ctrl-v 进入块模式选择要插入注释的地方(记得0可以返回行的开始)\r\n	2. 使用j,k 选定要注释的代码\r\n	3. 使用Shift-I 进行插入模式\r\n	4. 插入要插入的内容， 比如#, //\r\n	5. 按 ESC键 可以看到实现了注释功能\r\n	\r\n	实现uncomment功能， 在块模式选定要删除的内容，\r\n	使用d 或者 x可以删除。\r\n	似乎可以自己设置快捷键， 以后再研究一下。\r\n```\r\n#### 常用的一些指令 \r\n1. 在Vim中如何撤销修改和恢复修改(Undo and Redo)\r\n	Undo change 在Command Mode下面使用 U    \r\n	Redo change 在CommandMode 下面使用Ctrl+r    \r\n事实上文本编辑器的undo 和 redo 实现机制是采用栈(FIFO)      \r\n2. Vim中的大小写转换\r\n  * ~ 将光标所在字符交互转换,即大写变小写,小写变大写.(toggle)      \r\n  * 单词大小写转换,光标定位到该单词        \r\n  	g~iw   #这里的i表示inner,光标定位在该单词的任何位置即可.    	\r\n    g~3w   #将光标后的三个词转换,光标需处于单词首   \r\n  * 将当前行转换   \r\n  	+ g~~ #将当前行相互转换   \r\n	+ gUU #将当前行转换为大写   \r\n	+ guu #将当前行转换为小写   \r\n\r\n3. shortcuts for better efficience.   \r\n  * gi  跳回到上一次编辑的地方,并进入insert模式    \r\n  * Ctrl-c 可以代替Esc退出insert模式,更加容易编辑.   \r\n\r\n\r\n','Visual Mode可视化模式， 是Vim的一个工作模式， 本文章将演示如何在Visual mode下对文本进行编辑， 实现代码块缩进,对选定文本大小写转换， 对选定区域进行查找修改等功能。','2016-03-13 10:35:56','shady','PL',0,0,'vimzhi-ling-er',1,''),(18,'Git命令','Git 分布式版本控制系统(Distributed revision control system),而Github则提供共享虚拟主机服务,用于存放Git版本控制的软件代码和内容项目.Wiki的解释是web-base Git repository hosting service.也就是web版的git,能进行分布式版本控制(distributed revision control)和源码管理(source code management SCM).\r\n ![Github](http://7xo4sa.com1.z0.glb.clouddn.com/github.jpg)\r\n\r\n> Git commands are just graph manipulation command--create/delete nodes. moving pointer around.\r\n\r\n![Fig1.Git-Branching-Model     \r\n    Author: Vincent Driessen     \r\n    License: Creative Commons BY-SA](http://7xo4sa.com1.z0.glb.clouddn.com/gitworkflow.jpg)\r\n 这篇文章主要用于记录我学习git过程中用到的命令,觉得有意思的就会记录,关于git的学习有很多资料,有兴趣可以看下面的链接.事实上， 我的博客就是在github上托管的,基于Git、GitHub、Markdown与Jekyll,并绑定了自定义域名.\r\n\r\n####如何撤销工作区的文件修改   \r\n(注意,git的状态可以使用git status 查看)      \r\n1. 介绍如何使用diff命令找出修改的文件     \r\n* 对比工作区和暂存区的文件不同    \r\n  git diff   使用这条命令会输出工作区和暂存区中所有文件的修改    \r\n  git diff filename  可以在命令后指定对比的文件名     \r\n* 对比缓存区中文件与仓库中文件的区别    \r\n  git diff --staged 对比所有文件不同     \r\n  git diff --staged filename 指定文件名对比    \r\n2. 撤销还没加入暂存区(staging area)的文件修改    \r\n*  撤销指定文件的修改    \r\n	git checkout -- filename.txt(注意--和文件名间的空格)    \r\n	事实上, *--*可以省略, 不过容易和切换分支搞混,     \r\n	git checkout branchName 所以最好还是加上*--*     \r\n*  撤销所有工作区的修改    \r\n	    git checkout *    \r\n* 如何删除新添加的文件(untracked file)    \r\n\r\n```python\r\n	只有当文件比较多时,才会需要使用到下面的指令。    \r\n  git clean -i    \r\n	-i表示 --interactive会弹出对应菜单让你选择    \r\n	git clean -n    \r\n  -n表示\"--dry-run\"不会移除任何文件， 不过会模拟出操作结果    \r\n	git clean -f    \r\n	-f表示\"--force\"强制删除,删除当前目录所有的untraced 文件    \r\n	git clean -df     \r\n	-df表示--directory --force表示删除当前目录下的所有没记录的文件和文件夹\r\n```\r\n3. 撤销已经加入暂存区的文件\r\n* git reset filename      \r\n  将修改撤销到工作区， 也就是将原先加入到暂存区中的文件拉回工作区   \r\n  现在就可以重复上面2操作， 选择撤销工作区的文件修改。      \r\n\r\n####如何删除文件和恢复文件   \r\n1. 恢复删除的文件   \r\n注意在这里的文件状态可使用git status 查看         \r\n* 通常在Terminal下删除文件都是直接使用rm 并且删除是不可恢复的    \r\n   在git local repository 使用了 rm filename     \r\n   这时修改还没有提交到staged area缓存区,所以可以使用下面的语句将文件从缓存区恢复。    \r\n   git checkout -- filename  将staged area中的文件取回来,这和上面的撤销工作区的修改一样\r\n   可以理解为cp指令,如果工作区存在则覆盖,不存在则创建    \r\n* 如果直接使用git rm filename删除文件,则此时已经将删除提交到staged area\r\n  将删除的文件提交到staged area也需要这条指令。    \r\n  可以使用下面的指令将已经提交到statged area的删除文件恢复.    \r\n  git reset HEAD filename    \r\n  这条命令会将文件恢复到staged area.   \r\n  则此时使用上面的步骤,可以将文件恢复到工作区.  \r\n  git checkout -- filename   \r\n* 如果删除文件,并已经提交了commit     \r\n  如果除了删除文件外,没有其它的修改,则可以直接利用git的回溯功能,返回上一个commit point.         \r\n  git reset HEAD^ --hard       \r\n  如果期间还修改了其它文件,只想恢复删除的文件,而且保存修改的文件内容,那么可以使用下面的指令.    \r\n  git reset HEAD^ filename    \r\n  \r\n####学习链接    \r\n1. [高效利用GitHub][link1]   \r\n2. [git 简明指南][link2]   \r\n3. [git 教程][link3]\r\n3. [github page][link4]\r\n[link1]: http://www.yangzhiping.com/tech/github.html\r\n[link2]: http://rogerdudler.github.io/git-guide/index.zh.html\r\n[link3]: http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\r\n[link4]: https://pages.github.com\r\n','Git 分布式版本控制系统(Distributed revision control system),而Github则提供共享虚拟主机服务,用于存放Git版本控制的软件代码和内容项目.','2016-03-13 10:45:57','shady','PL',0,0,'gitming-ling',1,''),(19,'Linux命令行','> Unix was not designed to stop its users from doing stupid things, as that would also stop them from doing clever things.\r\n\r\n####copy/paste in shell command\r\n1. 如何删除正在编辑的命令   \r\n * Ctrl-U  删除从当前行头开始到光标所在处   \r\n * Ctrl-K  删除从光标开始到当前行结束    \r\n * 可以使用方向键的向下删除整行内容   \r\n2. 粘贴所删除的命令    \r\n * Ctrl-Y  在当前光标处粘贴    \r\n  在linux中copy/paste 以前称为 kill/yank    \r\n    \r\n3. 外部 复制/粘贴内容到shell    \r\n *  Ctrl-Shift-C  \r\n 使用光标选定复制内容,使用ctrl-shift-c    \r\n *  Ctrl-Shift-V  在当前光标处粘贴    \r\n4. 快速跳跃    \r\n * Ctrl-A  跳到当前编辑行的开头   \r\n * Ctrl-E  跳到当前编辑行的末尾    \r\n\r\n####常用快捷键   \r\n*  清屏  \r\n    Ctrl-L 效果和clear一样   \r\n* 结束当前运行进程\r\n    Ctrl-C\r\n* 自动补全命令  \r\n    Tab \r\n* 跳回原先文件路径   \r\n  cd -    \r\n  #该指令会跳回系统环境变量OLD\\_PATH保存的值    \r\n  #即原先工作的文件路径       \r\n* 记录多个文件路径(类是堆栈)    \r\n  pushd ~/new/path    \r\n  popd    \r\n  #使用pushd会记录下当前路径 并跳转到后面的指定路径    \r\n  #使用popd会弹出栈顶的路径，并修改当前路径到该路径   \r\n    \r\n\r\n####在安装package前 如何查看package信息\r\n1. 使用 apt-cache show <package>\r\n\r\n```python   \r\n    shady@ubuntu:Piece$ apt-cache show python3\r\n    Package: python3\r\n    Priority: important\r\n    Section: python\r\n    Installed-Size: 100\r\n    Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\r\n    Original-Maintainer: Matthias Klose <doko@debian.org>\r\n    Architecture: amd64\r\n    Source: python3-defaults\r\n    Version: 3.4.0-0ubuntu2\r\n    Replaces: python3-minimal (<< 3.1.2-2)\r\n    Provides: python3-profiler\r\n    Depends: python3.4 (>= 3.4.0-0~), python3-minimal (= 3.4.0-0ubuntu2), libpython3-stdlib (= 3.4.0-0ubuntu2), dh-python\r\n    Suggests: python3-doc (>= 3.4.0-0ubuntu2), python3-tk (>= 3.4.0-0ubuntu2)\r\n    Filename: pool/main/p/python3-defaults/python3_3.4.0-0ubuntu2_amd64.deb\r\n    Size: 8666\r\n    MD5sum: bfb7da0b87a977d7c8810d41aa151ba0\r\n    SHA1: 63e38e68c45e194311ee68d9d81cb900283f4c5b\r\n    SHA256: e1856a097784129b4a52c31c348fadd4eb82097762bcd652179946ebfab4592b\r\n    Description-en: interactive high-level object-oriented language (default python3 version)\r\n    Python, the high-level, interactive object oriented language,\r\n    includes an extensive class library with lots of goodies for\r\n    network programming, system administration, sounds and graphics.\r\n    .\r\n    This package is a dependency package, which depends on Debian\'s default\r\n    Python 3 version (currently v3.4).\r\n    Description-md5: d2d5b9ee5047a791224f1b8f4bc73d3b\r\n    Multi-Arch: allowed\r\n    Homepage: http://www.python.org/\r\n    Bugs: https://bugs.launchpad.net/ubuntu/+filebug\r\n    Origin: Ubuntu\r\n    Supported: 5y\r\n    Task: minimal>>)\r\n```\r\n可以查看package的基本信息， 同时还能使用MD5sum对软件数据一致性进行检查.    \r\n可以使用下面命令进行模拟安装.\r\napt-get -s install <package>\r\n-s 表示simulation 模拟的仿真的,不对系统产生影响.\r\n\r\n#### 如何对指定目录的文件按文件大小排序\r\n1. 使用du命令    \r\n    du命令是可以用来查看磁盘的使用情况的命令    \r\n    $ du -a -d 1 | sort -nr    \r\n    -a --all 对所有文件显示大小(默认只有文件夹)    \r\n    -d --max-depth 指定了文件深度(默认是遍历所有子文件夹)    \r\n    sort 命令对结果进行排序, -n选项规定按数值排序 -r 规定按大到小排序(默认从小到大)    \r\n    $ du  -ahd 1 | sort -hr    \r\n    -h --human-readable 选项输出的文件大小是以(B, K, M, G格式)       \r\n    sort -h --human-numeric-sort 能够正确对(K,M,G)排序    \r\n\r\n2. 使用ls命令(只能作用于没有文件夹的排序)    \r\n    $ ls -lS   \r\n    -S 选项对文件的按大小排序(默认是按文件名排序)    \r\n    下面是 $ ls -l的格式：    \r\n    -rw-r----- 1 shady shady     95957 Oct  3 18:18 jquery-1.11.3.min.js\r\n    可以采用下面的格式对指定域进行排序：    \r\n    $ ls -l | sort -k 5 -nr\r\n    -k 选项指定了使用第五个域作为排序列    \r\n\r\n3. 使用find命令     \r\n   $ find . -type d  -printf \'%s %p\\n\' | sort -nr | head -n 10 \r\n   -type d  只查找给定目录的文件夹,使用f指定file        \r\n   printf \'%s %p\\n\' 指定输出文件大小和名称   \r\n     \r\n#### 如何查看文件夹(folder)的大小(size)\r\n1. 通常查看文件的大小可以使用 ls    \r\nls -hla /home/shady/Documents    \r\n我们会发现显示的是目录的大小，那么如何获得当前文件夹的大小:(文件夹所包含所有文件大小的总容量)  \r\n(Linux has directories, not folders, there\'s difference between the size of a directory [which is special file olding inodes that point to other files] and the size of the contents of that directory.)   \r\n2. 使用 du命令\r\n\r\n```python\r\n    $ du -sh \r\n    -s --summarize   显示当前所有文件的大小之和\r\n    -h --human-readable 显示为人们可读取的文件大小(KB M)\r\n```\r\n','Unix was not designed to stop its users from doing stupid things, as that would also stop them from doing clever things.','2016-03-13 11:03:48','shady','PL',0,0,'linuxming-ling-xing',1,''),(20,'Google Python 课程','今天在Youtube上看了一下google的[python](https://developers.google.com/edu/python/)课程，分别看了 [Day2	Part2](https://www.youtube.com/watch?v=uKZ8GBKmeDM&list=PLC8825D0450647509&index=5),以及 [Day2 Part3](https://www.youtube.com/watch?v=Nn2KQmVF5Og&list=PLC8825D0450647509&index=6), 最后跟着做了一下最后两次的课堂练习，下面给出相关的代码以及相应的知识点总结。\r\n\r\n#### os模块 shutil 模块     \r\n题目要求：     \r\n(1). 找到给定路径中命名规则为xyz__hello__.txt 及其类似的文件，输出它们的绝对路径    \r\n输入格式：$ ./copyspecial.py .    \r\n(2). 将找到的特殊命名的文件复制到指定的文件路径，给定的文件路径不存在则创建    \r\n输入格式：./copyspecial.py --todir /tmp/fooby .    \r\n(3). 将找到的文件压缩， 发送到指定的文件路径， 如果文件路径不存在则自动创建、    \r\n输入格式：$ ./copyspecial.py --tozip /no/way.zip .    \r\n\r\n```python\r\nimport os, sys, re, shutil\r\ndef find_operation(operate, index): \r\n    # 利用正则表达式对特殊文件命名进行选择 \r\n    pattern = re.compile(r\'\\w*__\\w+__.\\w+\')\r\n    directory = sys.argv[index]\r\n    if os.path.isdir(directory):\r\n        allFile = os.listdir(directory)\r\n        #对特殊文件进行相对于的操作\r\n        operate([ filename for filename in allFile if pattern.search(filename)])\r\n    else:\r\n        print(\"Direcotry cannot be found\")\r\n\r\n# 利用os模块的abspath()打印出文件的绝对路径\r\ndef print_abspath(allFile):\r\n    for filename in allFile:\r\n        print(os.path.abspath(filename))\r\n\r\n# 利用shutil模块对文件进行复制\r\ndef copy_file(allFile):\r\n    import shutil\r\n    for filename in allFile:\r\n        shutil.copy(filename, sys.argv[2])\r\n\r\n# 使用subprocess模块，调用shell， 对文件进行压缩\r\ndef zip_file(allFile):\r\n    import subprocess\r\n    fileList = \' \'.join(allFile)\r\n    command = \"tar -cvzf %s %s\" % (sys.argv[2], fileList)\r\n    subprocess.call(command, shell=True)\r\n\r\n# 主函数， 根据不同的参数， 调用不用函数进行处理\r\ndef print_copy_zip():\r\n    if len(sys.argv) == 2:\r\n        find_operation(print_abspath, 1)\r\n    elif len(sys.argv) == 4:\r\n        if sys.argv[1] == \'--todir\':\r\n            如果文件路径不存在， 则进行创建\r\n            if not os.path.isdir(sys.argv[1]):\r\n                os.makedirs(sys.argv[2])\r\n            find_operation(copy_file, 3)\r\n        elif sys.argv[1] == \'--tozip\':\r\n            find_operation(zip_file, 3)\r\n        else:\r\n            print(\"Unrecognized parameter\")\r\n    else:\r\n        print(\"Illegal parameter\")\r\n\r\nprint_copy_zip()\r\n\r\n```\r\n#####相关的os模块：   \r\n1. 查看当前工作路径    \r\n	os.getpwd()     \r\n	$ pwd    \r\n2. 修改当前的工作目录    \r\n	os.chdir(\'/path/to\')    \r\n	$ cd  /path/to    \r\n3. 创建目录    \r\n    (1). 创建新的文件路径    \r\n            os.mkdir(\'newDirectory\')    \r\n            $ mkdir newDirectory    \r\n    (2). 递归创建新的文件路径    \r\n            os.makedirs(\'/new/directory\')    \r\n            如果当前的目录不存在new, 则会创建new并在new里面创建directory目录    \r\n            mkdir -p new/directory  # -p代表--parent，表示 如果有需要的话创建父目录    \r\n4. 修改到当前用户的主目录(Home directory)     \r\n	os.chdir(os.path.expanduser(\"~\"))     \r\n	$ cd ~    \r\n5. 列出当前路径的所有文件    \r\n    os.listdir(path)    \r\n    $ ls    \r\n6. 删除相关文件    \r\n    (1). 删除指定文件    \r\n        os.remove(\'/path/to/the/filename\')     \r\n        $ rm  /path/to/the/filename    \r\n    (2). 移除空的文件夹    \r\n        os.rmdir(path)    \r\n        $ rmdir path   \r\n    (3).  移除非空文件夹   \r\n        os.removedirs(path)    \r\n        $ rm path -r     \r\n7. 修改文件(路径)的名字    \r\n    os.rename(\'one\', \'two\')    \r\n    $ mv one two     \r\n8. 创建一个文件路径     \r\n    foldername = os.path.join(os.environ[\'HOME\'], \'python\', \'project\')    \r\n    os.makedirs(foldername)     \r\n    $ mkdir -p ~/python/project     \r\n9. 检测file是文件路径还是文件     \r\n    os.path.isdir(path)    \r\n    $ if [ -d $dirname ]; then     \r\n    os.path.isfile(filename)      \r\n    $ if [ -f $filename ]; then     \r\n10. 文件名的处理     \r\n    (1). 获得文件的绝对路径     \r\n    os.path.abspath(filename)      \r\n    (2). 获得文件的相对路径       \r\n    os.path.relpath(filename)        \r\n    (3). 分离文件名和路径名       \r\n    foldername, basename = os.path.split(\'path\')       \r\n    (4). 分离文件名和拓展后缀名       \r\n    stem, ext = os.path.splitext(basename)         \r\n\r\n##### shutil模块     \r\n1. 移除指定的文件       \r\n        import shutil         \r\n        shutil.rmtree(foldername)       \r\n2. 复制相关的文件        \r\n    shutil.copy(\'fromfile\', \'tofile\')       \r\n3. 复制整个文件夹      \r\n    shutil.copytree(sourcefolder, destination)        \r\n#### 使用urllib\r\n\r\n','Google的Python课程， 相关的练习的代码和相关的知识点。','2016-03-30 16:19:12','shady','PL',2,0,'google-python-ke-cheng',2,''),(21,'BeautifulSoup入门 ','Beautiful Soup 是一个可以从HTML或XML文件中提取数据的Python库.\r\n它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档等功能。\r\n\r\n#### 安装BeautifulSoup的解析器lxml\r\n今天想要使用BeautifulSoup对文件进行XML解析，不过发现BeautifulSoup的默认\r\n解析引擎是html.parser, 没有安装lxml解析引擎， 下面介绍如何安装。\r\n\r\n```python\r\n >>> soup = BeautifulSoup(\'content\', \'lxml\')\r\n第二个参数指定使用的解析引擎 \r\ns4.FeatureNotFound: Couldn\'t find a tree builder with the features \r\nyou requested: lxml.  Do you need to install a parser library?\r\n```\r\n解析引擎的不同可以看这里[安装解析器](https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html#id9)\r\n可以在独立的虚拟环境(virtualenv)下安装，也可以在全局安装(使用sudo)\r\n\r\n```python\r\n$ sudo pip install lxml\r\n在CentOS中，安装过程一直出现问题， 通过安装下面的包解决问题\r\n$ yum install libxslt-devel\r\n$ yum install libxml2-devel\r\n```\r\n\r\n### BeautifulSoup中的对象\r\n    Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象\r\n可以归纳为4种: Tag , NavigableString , BeautifulSoup , Comment\r\n\r\n#### BeautifulSoup对象\r\n\r\n```python \r\n >>> from bs4 import BeautifulSoup \r\n >>>with open(\'filename.html\', \'r\', encoding=\"utf-8\") as fp:\r\n            soup = BeautfiulSoup(fp, \'lxml\')\r\n读取一个本地文件， 构建一个BeautifulSoup对象\r\n``` \r\nBeautifulSoup对象表示的是一个文档的全部内容， 它可以支持遍历文档数和搜索文档树。\r\n\r\n#### Tag对象\r\ntag的属性可以被添加,删除或修改.  tag的属性操作方法与Python中的字典一致。\r\n同时多值属性， 则该值返回为字典格式。\r\n\r\n```python\r\n>>> aTag  =  soup.a\r\n>>> type(aTag)\r\n<lass \'bs4.element.Tag\'>\r\n>>> aTag.name\r\n\'a\'\r\n>>> aTag.text\r\n\'Google\'\r\n>>> aTag.attr\r\n{\'href\': \'www.google.com\'}\r\n>>> aTag[\'href\']\r\n\"www.google.com\"\r\n为aTag加上多个class name\r\n>>> aTag[\'class\'] = [\"Red\", \'Green\', \'dark\']\r\n```\r\n\r\n##### 可以遍历的字符串\r\n    字符串常被包含在tag内.Beautiful Soup用 NavigableString 类来包装tag中的字符串.\r\n    \r\n','Beautiful Soup 是一个可以从HTML或XML文件中提取数据的Python库. 它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档等功能.','2016-04-18 04:49:58','shady','PL',0,0,'beautifulsoupru-men',2,'');
/*!40000 ALTER TABLE `blog_post` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_post_tags`
--

DROP TABLE IF EXISTS `blog_post_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_post_tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `post_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `post_id` (`post_id`,`tag_id`),
  KEY `blog_post_tags_tag_id_7e82fe7ed24cf0bf_fk_blog_tag_tag_id` (`tag_id`),
  CONSTRAINT `blog_post_tags_post_id_5dbdafc7c30bb07e_fk_blog_post_post_id` FOREIGN KEY (`post_id`) REFERENCES `blog_post` (`post_id`),
  CONSTRAINT `blog_post_tags_tag_id_7e82fe7ed24cf0bf_fk_blog_tag_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `blog_tag` (`tag_id`)
) ENGINE=InnoDB AUTO_INCREMENT=159 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_post_tags`
--

LOCK TABLES `blog_post_tags` WRITE;
/*!40000 ALTER TABLE `blog_post_tags` DISABLE KEYS */;
INSERT INTO `blog_post_tags` VALUES (25,1,1),(27,1,6),(26,1,13),(29,2,11),(28,2,18),(39,3,9),(40,3,10),(41,3,11),(57,4,9),(58,4,10),(59,4,11),(69,5,9),(70,5,10),(71,5,11),(73,6,11),(72,6,18),(76,7,11),(77,7,13),(99,8,13),(100,8,15),(88,9,10),(89,9,11),(96,10,9),(97,10,10),(98,10,11),(107,11,1),(109,11,6),(108,11,13),(112,12,1),(113,12,15),(126,13,1),(127,13,13),(128,13,15),(130,14,18),(131,15,18),(141,16,1),(143,17,1),(146,18,1),(147,18,18),(148,19,1),(152,20,1),(153,20,3),(154,20,4),(158,21,3);
/*!40000 ALTER TABLE `blog_post_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_tag`
--

DROP TABLE IF EXISTS `blog_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_tag` (
  `tag_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `frequence` int(10) unsigned NOT NULL,
  `slug` varchar(50) NOT NULL,
  PRIMARY KEY (`tag_id`),
  UNIQUE KEY `name` (`name`),
  UNIQUE KEY `slug` (`slug`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_tag`
--

LOCK TABLES `blog_tag` WRITE;
/*!40000 ALTER TABLE `blog_tag` DISABLE KEYS */;
INSERT INTO `blog_tag` VALUES (1,'Linux',0,'linux'),(2,'Java',0,'java'),(3,'Python',0,'python'),(4,'Regex',0,'regex'),(5,'ADT',0,'adt'),(6,'CommandLine',0,'commandline'),(7,'Bootstrap',0,'bootstrap'),(8,'Jquery',0,'jquery'),(9,'HTML',0,'html'),(10,'CSS',0,'css'),(11,'WebDevelopemnt',0,'webdevelopemnt'),(12,'Django',0,'django'),(13,'Configuration',0,'configuration'),(14,'Algorithm',0,'algorithm'),(15,'MySQL',0,'mysql'),(16,'DataMining',0,'datamining'),(17,'Machine Learning',0,'machine-learning'),(18,'Hacking',0,'hacking');
/*!40000 ALTER TABLE `blog_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_content_type_id_f1ebaab9b207732_fk_django_content_type_id` (`content_type_id`),
  KEY `django_admin_log_user_id_c84ba2b2c6de902_fk_auth_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_user_id_c84ba2b2c6de902_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `django_content_type_id_f1ebaab9b207732_fk_django_content_type_id` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=73 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2016-03-03 10:54:37','1','Server的配置',1,'',8,1),(2,'2016-03-03 10:59:45','1','Server的配置',2,'Changed content.',8,1),(3,'2016-03-03 11:00:04','1','Server的配置',2,'Changed content.',8,1),(4,'2016-03-03 11:02:32','1','Server的配置',2,'Changed content.',8,1),(5,'2016-03-03 11:05:15','1','Server的配置',2,'Changed content.',8,1),(6,'2016-03-03 11:07:13','1','Server的配置',2,'Changed content.',8,1),(7,'2016-03-03 11:08:15','1','Server的配置',2,'No fields changed.',8,1),(8,'2016-03-03 11:09:11','1','Server的配置',2,'Changed content.',8,1),(9,'2016-03-03 11:10:55','1','Server的配置',2,'Changed content.',8,1),(10,'2016-03-03 11:16:12','2','这是一个Markdown测试  ',1,'',8,1),(11,'2016-03-03 11:19:33','12','WebDevelopement',1,'',9,1),(12,'2016-03-03 11:19:45','3','HTML 基础',1,'',8,1),(13,'2016-03-03 11:21:47','3','HTML 基础',2,'Changed content.',8,1),(14,'2016-03-03 11:22:32','3','HTML 基础',2,'Changed content.',8,1),(15,'2016-03-03 11:22:58','3','HTML 基础',2,'Changed content.',8,1),(16,'2016-03-03 11:27:11','4','HTML 基础(二)',1,'',8,1),(17,'2016-03-03 11:28:15','4','HTML 基础(二)',2,'Changed content.',8,1),(18,'2016-03-03 11:28:44','4','HTML 基础(二)',2,'Changed content.',8,1),(19,'2016-03-03 11:30:07','4','HTML 基础(二)',2,'Changed content.',8,1),(20,'2016-03-03 11:39:42','4','HTML 基础(二)',2,'Changed content.',8,1),(21,'2016-03-03 11:41:22','4','HTML 基础(二)',2,'Changed content.',8,1),(22,'2016-03-03 11:46:09','5','CSS基础',1,'',8,1),(23,'2016-03-03 11:46:39','5','CSS基础',2,'Changed content.',8,1),(24,'2016-03-03 11:47:22','5','CSS基础',2,'Changed content.',8,1),(25,'2016-03-03 11:49:57','5','CSS基础',2,'Changed content.',8,1),(26,'2016-03-03 11:58:33','6','Web基础',1,'',8,1),(27,'2016-03-03 12:03:14','7','利用CDN加速网站加载',1,'',8,1),(28,'2016-03-03 12:05:31','7','利用CDN加速网站加载',2,'Changed content.',8,1),(29,'2016-03-03 12:08:54','8','MySQL数据迁移和备份',1,'',8,1),(30,'2016-03-03 13:45:20','8','MySQL数据迁移和备份',2,'Changed content.',8,1),(31,'2016-03-03 13:47:57','9','CSS属性',1,'',8,1),(32,'2016-03-03 13:49:13','9','CSS属性',2,'Changed content.',8,1),(33,'2016-03-03 13:51:17','9','CSS属性',2,'No fields changed.',8,1),(34,'2016-03-03 13:53:21','9','CSS属性',2,'Changed content.',8,1),(35,'2016-03-03 13:55:51','10','CSS基础 (二)',1,'',8,1),(36,'2016-03-03 13:57:15','10','CSS基础 (二)',2,'Changed content.',8,1),(37,'2016-03-03 13:58:27','10','CSS基础 (二)',2,'Changed content.',8,1),(38,'2016-03-03 14:02:08','8','MySQL数据迁移和备份',2,'Changed content.',8,1),(39,'2016-03-03 14:05:52','11','Ubuntu日常使用skills',1,'',8,1),(40,'2016-03-03 14:07:03','11','Ubuntu日常使用skills',2,'Changed content.',8,1),(41,'2016-03-03 14:08:56','11','Ubuntu日常使用skills',2,'Changed content.',8,1),(42,'2016-03-03 14:13:16','12','MySQL使用日常',1,'',8,1),(43,'2016-03-03 14:18:50','12','MySQL使用日常',2,'Changed content.',8,1),(44,'2016-03-03 14:20:43','13','MySQL 基础',1,'',8,1),(45,'2016-03-03 14:25:18','13','MySQL 基础',2,'Changed content.',8,1),(46,'2016-03-03 14:27:04','13','MySQL 基础',2,'Changed content.',8,1),(47,'2016-03-03 14:30:03','13','MySQL 基础',2,'Changed content.',8,1),(48,'2016-03-03 14:31:26','13','MySQL 基础',2,'Changed content.',8,1),(49,'2016-03-03 14:40:21','14','Middle Class in China',1,'',8,1),(50,'2016-03-03 14:41:29','14','Middle Class in China',2,'Changed content.',8,1),(51,'2016-03-03 14:44:21','15','写在外卖大卖时',1,'',8,1),(52,'2016-03-13 09:29:21','16','VIM指令',1,'',8,1),(53,'2016-03-13 09:32:04','16','VIM指令',2,'Changed content.',8,1),(54,'2016-03-13 10:16:43','16','VIM指令',2,'Changed content.',8,1),(55,'2016-03-13 10:18:19','16','VIM指令',2,'Changed content.',8,1),(56,'2016-03-13 10:19:18','16','VIM指令',2,'Changed content.',8,1),(57,'2016-03-13 10:20:47','16','VIM指令',2,'Changed content.',8,1),(58,'2016-03-13 10:21:57','16','VIM指令',2,'Changed content.',8,1),(59,'2016-03-13 10:23:39','16','VIM指令',2,'Changed content.',8,1),(60,'2016-03-13 10:25:15','16','VIM指令',2,'Changed content.',8,1),(61,'2016-03-13 10:27:34','16','VIM指令',2,'Changed content.',8,1),(62,'2016-03-13 10:35:56','17','VIM指令(二)',1,'',8,1),(63,'2016-03-13 10:38:10','17','VIM指令(二)',2,'Changed content.',8,1),(64,'2016-03-13 10:45:57','18','Git命令',1,'',8,1),(65,'2016-03-13 10:49:55','18','Git命令',2,'Changed content.',8,1),(66,'2016-03-13 11:03:48','19','Linux命令行',1,'',8,1),(67,'2016-03-30 16:19:12','20','Google Python 课程',1,'',8,1),(68,'2016-03-30 16:24:17','20','Google Python 课程',2,'Changed content.',8,1),(69,'2016-04-18 04:49:58','21','BeautifulSoup入门 ',1,'',8,1),(70,'2016-04-18 04:50:54','21','BeautifulSoup入门 ',2,'Changed content.',8,1),(71,'2016-04-18 04:52:00','21','BeautifulSoup入门 ',2,'Changed content.',8,1),(72,'2016-04-18 04:53:00','21','BeautifulSoup入门 ',2,'Changed content.',8,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_4e88d191efa62642_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(4,'auth','user'),(9,'blog','category'),(8,'blog','post'),(7,'blog','tag'),(5,'contenttypes','contenttype'),(6,'sessions','session');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2016-03-03 10:16:34'),(2,'auth','0001_initial','2016-03-03 10:16:34'),(3,'admin','0001_initial','2016-03-03 10:16:35'),(4,'contenttypes','0002_remove_content_type_name','2016-03-03 10:16:35'),(5,'auth','0002_alter_permission_name_max_length','2016-03-03 10:16:35'),(6,'auth','0003_alter_user_email_max_length','2016-03-03 10:16:35'),(7,'auth','0004_alter_user_username_opts','2016-03-03 10:16:35'),(8,'auth','0005_alter_user_last_login_null','2016-03-03 10:16:35'),(9,'auth','0006_require_contenttypes_0002','2016-03-03 10:16:35'),(10,'blog','0001_initial','2016-03-03 10:16:35'),(11,'blog','0002_post_image_link','2016-03-03 10:16:35'),(12,'sessions','0001_initial','2016-03-03 10:16:35');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_de54fa62` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('0oxxe9c2wqzd8lq975rtiqp4glmow67i','YTcwZGNkYWM0MTU4ZTVlZGEwNjNkMGVlYmYxZjhkNDNmNDIwMTRmNDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1OTMxOWM2ZDcxOTU0MmE0MzdlZjdmMDBhNTkwMzNiMmI5ZjU2YTRmIn0=','2016-05-01 03:03:10'),('5tkhn9x8bwefcwyjqvzagoen4yz5mzqj','YTcwZGNkYWM0MTU4ZTVlZGEwNjNkMGVlYmYxZjhkNDNmNDIwMTRmNDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1OTMxOWM2ZDcxOTU0MmE0MzdlZjdmMDBhNTkwMzNiMmI5ZjU2YTRmIn0=','2016-03-17 13:43:59'),('oy0nea92mcumkdpe6p2nca11q9ubgvi6','YTcwZGNkYWM0MTU4ZTVlZGEwNjNkMGVlYmYxZjhkNDNmNDIwMTRmNDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI1OTMxOWM2ZDcxOTU0MmE0MzdlZjdmMDBhNTkwMzNiMmI5ZjU2YTRmIn0=','2016-04-13 16:17:03'),('pmgwbr7zike6npv7fixssssg3skjobn2','NTVhZWE3NGZmMjU5MzY2YjRkMjVjODdlYWUyMzdmMTY1YWVmNGY3ODp7Il9hdXRoX3VzZXJfaGFzaCI6IjU5MzE5YzZkNzE5NTQyYTQzN2VmN2YwMGE1OTAzM2IyYjlmNTZhNGYiLCJfYXV0aF91c2VyX2lkIjoiMSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2016-05-12 03:30:10');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-07-21  4:12:30
